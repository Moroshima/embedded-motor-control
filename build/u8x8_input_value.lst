ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"u8x8_input_value.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.u8x8_UserInterfaceInputValue,"ax",%progbits
  20              		.align	1
  21              		.global	u8x8_UserInterfaceInputValue
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	u8x8_UserInterfaceInputValue:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/u8g2/Src/u8x8_input_value.c"
   1:Core/Src/u8g2/Src/u8x8_input_value.c **** /*
   2:Core/Src/u8g2/Src/u8x8_input_value.c **** 
   3:Core/Src/u8g2/Src/u8x8_input_value.c ****   u8x8_input_value.c
   4:Core/Src/u8g2/Src/u8x8_input_value.c ****   
   5:Core/Src/u8g2/Src/u8x8_input_value.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:Core/Src/u8g2/Src/u8x8_input_value.c **** 
   7:Core/Src/u8g2/Src/u8x8_input_value.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:Core/Src/u8g2/Src/u8x8_input_value.c ****   All rights reserved.
   9:Core/Src/u8g2/Src/u8x8_input_value.c **** 
  10:Core/Src/u8g2/Src/u8x8_input_value.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:Core/Src/u8g2/Src/u8x8_input_value.c ****   are permitted provided that the following conditions are met:
  12:Core/Src/u8g2/Src/u8x8_input_value.c **** 
  13:Core/Src/u8g2/Src/u8x8_input_value.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:Core/Src/u8g2/Src/u8x8_input_value.c ****     of conditions and the following disclaimer.
  15:Core/Src/u8g2/Src/u8x8_input_value.c ****     
  16:Core/Src/u8g2/Src/u8x8_input_value.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:Core/Src/u8g2/Src/u8x8_input_value.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:Core/Src/u8g2/Src/u8x8_input_value.c ****     materials provided with the distribution.
  19:Core/Src/u8g2/Src/u8x8_input_value.c **** 
  20:Core/Src/u8g2/Src/u8x8_input_value.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:Core/Src/u8g2/Src/u8x8_input_value.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:Core/Src/u8g2/Src/u8x8_input_value.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:Core/Src/u8g2/Src/u8x8_input_value.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:Core/Src/u8g2/Src/u8x8_input_value.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:Core/Src/u8g2/Src/u8x8_input_value.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:Core/Src/u8g2/Src/u8x8_input_value.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:Core/Src/u8g2/Src/u8x8_input_value.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:Core/Src/u8g2/Src/u8x8_input_value.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:Core/Src/u8g2/Src/u8x8_input_value.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 2


  30:Core/Src/u8g2/Src/u8x8_input_value.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:Core/Src/u8g2/Src/u8x8_input_value.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:Core/Src/u8g2/Src/u8x8_input_value.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:Core/Src/u8g2/Src/u8x8_input_value.c ****   
  34:Core/Src/u8g2/Src/u8x8_input_value.c **** */
  35:Core/Src/u8g2/Src/u8x8_input_value.c **** 
  36:Core/Src/u8g2/Src/u8x8_input_value.c **** #include "u8x8.h"
  37:Core/Src/u8g2/Src/u8x8_input_value.c **** 
  38:Core/Src/u8g2/Src/u8x8_input_value.c **** /*
  39:Core/Src/u8g2/Src/u8x8_input_value.c ****   return:
  40:Core/Src/u8g2/Src/u8x8_input_value.c ****     0: value is not changed (HOME/Break Button pressed)
  41:Core/Src/u8g2/Src/u8x8_input_value.c ****     1: value has been updated
  42:Core/Src/u8g2/Src/u8x8_input_value.c **** */
  43:Core/Src/u8g2/Src/u8x8_input_value.c **** 
  44:Core/Src/u8g2/Src/u8x8_input_value.c **** uint8_t u8x8_UserInterfaceInputValue(u8x8_t *u8x8, const char *title, const char *pre, uint8_t *val
  45:Core/Src/u8g2/Src/u8x8_input_value.c **** {
  30              		.loc 1 45 1 view -0
  31              		.cfi_startproc
  32              		@ args = 16, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 45 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 85B0     		sub	sp, sp, #20
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 56
  50 0006 0546     		mov	r5, r0
  51 0008 8B46     		mov	fp, r1
  52 000a 0292     		str	r2, [sp, #8]
  53 000c 0393     		str	r3, [sp, #12]
  54 000e 9DF838A0 		ldrb	r10, [sp, #56]	@ zero_extendqisi2
  55 0012 9DF83C90 		ldrb	r9, [sp, #60]	@ zero_extendqisi2
  56 0016 9DF84080 		ldrb	r8, [sp, #64]	@ zero_extendqisi2
  46:Core/Src/u8g2/Src/u8x8_input_value.c ****   uint8_t height;
  57              		.loc 1 46 3 is_stmt 1 view .LVU2
  47:Core/Src/u8g2/Src/u8x8_input_value.c ****   uint8_t y;
  58              		.loc 1 47 3 view .LVU3
  48:Core/Src/u8g2/Src/u8x8_input_value.c ****   uint8_t width;
  59              		.loc 1 48 3 view .LVU4
  49:Core/Src/u8g2/Src/u8x8_input_value.c ****   uint8_t x;
  60              		.loc 1 49 3 view .LVU5
  50:Core/Src/u8g2/Src/u8x8_input_value.c ****   uint8_t local_value = *value;
  61              		.loc 1 50 3 view .LVU6
  62              		.loc 1 50 11 is_stmt 0 view .LVU7
  63 001a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
  64              	.LVL1:
  51:Core/Src/u8g2/Src/u8x8_input_value.c ****   uint8_t r;
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 3


  65              		.loc 1 51 3 is_stmt 1 view .LVU8
  52:Core/Src/u8g2/Src/u8x8_input_value.c ****   uint8_t event;
  66              		.loc 1 52 3 view .LVU9
  53:Core/Src/u8g2/Src/u8x8_input_value.c **** 
  54:Core/Src/u8g2/Src/u8x8_input_value.c ****   /* calculate overall height of the input value box */
  55:Core/Src/u8g2/Src/u8x8_input_value.c ****   height = 1;	/* button line */
  67              		.loc 1 55 3 view .LVU10
  56:Core/Src/u8g2/Src/u8x8_input_value.c ****   height += u8x8_GetStringLineCnt(title);
  68              		.loc 1 56 3 view .LVU11
  69              		.loc 1 56 13 is_stmt 0 view .LVU12
  70 001c 0846     		mov	r0, r1
  71              	.LVL2:
  72              		.loc 1 56 13 view .LVU13
  73 001e FFF7FEFF 		bl	u8x8_GetStringLineCnt
  74              	.LVL3:
  75              		.loc 1 56 10 view .LVU14
  76 0022 0130     		adds	r0, r0, #1
  77 0024 C0B2     		uxtb	r0, r0
  78              	.LVL4:
  57:Core/Src/u8g2/Src/u8x8_input_value.c ****   
  58:Core/Src/u8g2/Src/u8x8_input_value.c ****   /* calculate offset from top */
  59:Core/Src/u8g2/Src/u8x8_input_value.c ****   y = 0;
  79              		.loc 1 59 3 is_stmt 1 view .LVU15
  60:Core/Src/u8g2/Src/u8x8_input_value.c ****   if ( height < u8x8_GetRows(u8x8)  )
  80              		.loc 1 60 3 view .LVU16
  81              		.loc 1 60 17 is_stmt 0 view .LVU17
  82 0026 2B68     		ldr	r3, [r5]
  83 0028 5E7C     		ldrb	r6, [r3, #17]	@ zero_extendqisi2
  84              		.loc 1 60 6 view .LVU18
  85 002a 8642     		cmp	r6, r0
  86 002c 44D9     		bls	.L13
  61:Core/Src/u8g2/Src/u8x8_input_value.c ****   {
  62:Core/Src/u8g2/Src/u8x8_input_value.c ****     y = u8x8_GetRows(u8x8);
  87              		.loc 1 62 5 is_stmt 1 view .LVU19
  88              	.LVL5:
  63:Core/Src/u8g2/Src/u8x8_input_value.c ****     y -= height;
  89              		.loc 1 63 5 view .LVU20
  90              		.loc 1 63 7 is_stmt 0 view .LVU21
  91 002e 361A     		subs	r6, r6, r0
  92              	.LVL6:
  64:Core/Src/u8g2/Src/u8x8_input_value.c ****     y /= 2;
  93              		.loc 1 64 5 is_stmt 1 view .LVU22
  94              		.loc 1 64 7 is_stmt 0 view .LVU23
  95 0030 C6F34606 		ubfx	r6, r6, #1, #7
  96              	.LVL7:
  97              	.L2:
  65:Core/Src/u8g2/Src/u8x8_input_value.c ****   }
  66:Core/Src/u8g2/Src/u8x8_input_value.c ****   
  67:Core/Src/u8g2/Src/u8x8_input_value.c ****   /* calculate offset from left for the label */
  68:Core/Src/u8g2/Src/u8x8_input_value.c ****   x = 0;
  98              		.loc 1 68 3 is_stmt 1 view .LVU24
  69:Core/Src/u8g2/Src/u8x8_input_value.c ****   width = u8x8_GetUTF8Len(u8x8, pre);
  99              		.loc 1 69 3 view .LVU25
 100              		.loc 1 69 11 is_stmt 0 view .LVU26
 101 0034 0299     		ldr	r1, [sp, #8]
 102 0036 2846     		mov	r0, r5
 103              	.LVL8:
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 4


 104              		.loc 1 69 11 view .LVU27
 105 0038 FFF7FEFF 		bl	u8x8_GetUTF8Len
 106              	.LVL9:
  70:Core/Src/u8g2/Src/u8x8_input_value.c ****   width += digits;
 107              		.loc 1 70 3 is_stmt 1 view .LVU28
 108              		.loc 1 70 9 is_stmt 0 view .LVU29
 109 003c 00EB0807 		add	r7, r0, r8
 110 0040 FFB2     		uxtb	r7, r7
 111              	.LVL10:
  71:Core/Src/u8g2/Src/u8x8_input_value.c ****   width += u8x8_GetUTF8Len(u8x8, post);
 112              		.loc 1 71 3 is_stmt 1 view .LVU30
 113              		.loc 1 71 12 is_stmt 0 view .LVU31
 114 0042 1199     		ldr	r1, [sp, #68]
 115 0044 2846     		mov	r0, r5
 116 0046 FFF7FEFF 		bl	u8x8_GetUTF8Len
 117              	.LVL11:
 118              		.loc 1 71 9 view .LVU32
 119 004a 0744     		add	r7, r7, r0
 120              	.LVL12:
 121              		.loc 1 71 9 view .LVU33
 122 004c FFB2     		uxtb	r7, r7
 123              	.LVL13:
  72:Core/Src/u8g2/Src/u8x8_input_value.c ****   if ( width < u8x8_GetCols(u8x8) )
 124              		.loc 1 72 3 is_stmt 1 view .LVU34
 125              		.loc 1 72 16 is_stmt 0 view .LVU35
 126 004e 2B68     		ldr	r3, [r5]
 127 0050 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 128              		.loc 1 72 6 view .LVU36
 129 0052 BB42     		cmp	r3, r7
 130 0054 32D9     		bls	.L14
  73:Core/Src/u8g2/Src/u8x8_input_value.c ****   {
  74:Core/Src/u8g2/Src/u8x8_input_value.c ****     x = u8x8_GetCols(u8x8);
 131              		.loc 1 74 5 is_stmt 1 view .LVU37
 132              	.LVL14:
  75:Core/Src/u8g2/Src/u8x8_input_value.c ****     x -= width;
 133              		.loc 1 75 5 view .LVU38
 134              		.loc 1 75 7 is_stmt 0 view .LVU39
 135 0056 DF1B     		subs	r7, r3, r7
 136              	.LVL15:
  76:Core/Src/u8g2/Src/u8x8_input_value.c ****     x /= 2;
 137              		.loc 1 76 5 is_stmt 1 view .LVU40
 138              		.loc 1 76 7 is_stmt 0 view .LVU41
 139 0058 C7F34607 		ubfx	r7, r7, #1, #7
 140              	.LVL16:
 141              	.L3:
  77:Core/Src/u8g2/Src/u8x8_input_value.c ****   }
  78:Core/Src/u8g2/Src/u8x8_input_value.c ****   
  79:Core/Src/u8g2/Src/u8x8_input_value.c ****   /* render */
  80:Core/Src/u8g2/Src/u8x8_input_value.c ****   u8x8_ClearDisplay(u8x8);   /* required, because not everything is filled */
 142              		.loc 1 80 3 is_stmt 1 view .LVU42
 143 005c 2846     		mov	r0, r5
 144 005e FFF7FEFF 		bl	u8x8_ClearDisplay
 145              	.LVL17:
  81:Core/Src/u8g2/Src/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 0);  
 146              		.loc 1 81 3 view .LVU43
 147 0062 0021     		movs	r1, #0
 148 0064 85F82310 		strb	r1, [r5, #35]
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 5


  82:Core/Src/u8g2/Src/u8x8_input_value.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title);
 149              		.loc 1 82 3 view .LVU44
 150              		.loc 1 82 39 is_stmt 0 view .LVU45
 151 0068 2B68     		ldr	r3, [r5]
 152              		.loc 1 82 8 view .LVU46
 153 006a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 154 006c CDF800B0 		str	fp, [sp]
 155 0070 3246     		mov	r2, r6
 156 0072 2846     		mov	r0, r5
 157 0074 FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 158              	.LVL18:
 159              		.loc 1 82 5 view .LVU47
 160 0078 0644     		add	r6, r6, r0
 161              	.LVL19:
 162              		.loc 1 82 5 view .LVU48
 163 007a F6B2     		uxtb	r6, r6
 164              	.LVL20:
  83:Core/Src/u8g2/Src/u8x8_input_value.c ****   x += u8x8_DrawUTF8(u8x8, x, y, pre);
 165              		.loc 1 83 3 is_stmt 1 view .LVU49
 166              		.loc 1 83 8 is_stmt 0 view .LVU50
 167 007c 029B     		ldr	r3, [sp, #8]
 168 007e 3246     		mov	r2, r6
 169 0080 3946     		mov	r1, r7
 170 0082 2846     		mov	r0, r5
 171 0084 FFF7FEFF 		bl	u8x8_DrawUTF8
 172              	.LVL21:
 173              		.loc 1 83 5 view .LVU51
 174 0088 0744     		add	r7, r7, r0
 175              	.LVL22:
 176              		.loc 1 83 5 view .LVU52
 177 008a FFB2     		uxtb	r7, r7
 178              	.LVL23:
  84:Core/Src/u8g2/Src/u8x8_input_value.c ****   u8x8_DrawUTF8(u8x8, x+digits, y, post);
 179              		.loc 1 84 3 is_stmt 1 view .LVU53
 180 008c 08EB0701 		add	r1, r8, r7
 181 0090 119B     		ldr	r3, [sp, #68]
 182 0092 3246     		mov	r2, r6
 183 0094 C9B2     		uxtb	r1, r1
 184 0096 2846     		mov	r0, r5
 185 0098 FFF7FEFF 		bl	u8x8_DrawUTF8
 186              	.LVL24:
  85:Core/Src/u8g2/Src/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 1);
 187              		.loc 1 85 3 view .LVU54
 188 009c 0123     		movs	r3, #1
 189 009e 85F82330 		strb	r3, [r5, #35]
  86:Core/Src/u8g2/Src/u8x8_input_value.c ****   
  87:Core/Src/u8g2/Src/u8x8_input_value.c ****   /* event loop */
  88:Core/Src/u8g2/Src/u8x8_input_value.c ****   u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 190              		.loc 1 88 3 view .LVU55
 191 00a2 4146     		mov	r1, r8
 192 00a4 2046     		mov	r0, r4
 193 00a6 FFF7FEFF 		bl	u8x8_u8toa
 194              	.LVL25:
 195 00aa 0346     		mov	r3, r0
 196 00ac 3246     		mov	r2, r6
 197 00ae 3946     		mov	r1, r7
 198 00b0 2846     		mov	r0, r5
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 6


 199 00b2 FFF7FEFF 		bl	u8x8_DrawUTF8
 200              	.LVL26:
 201 00b6 1CE0     		b	.L4
 202              	.LVL27:
 203              	.L13:
  59:Core/Src/u8g2/Src/u8x8_input_value.c ****   if ( height < u8x8_GetRows(u8x8)  )
 204              		.loc 1 59 5 is_stmt 0 view .LVU56
 205 00b8 0026     		movs	r6, #0
 206 00ba BBE7     		b	.L2
 207              	.LVL28:
 208              	.L14:
  68:Core/Src/u8g2/Src/u8x8_input_value.c ****   width = u8x8_GetUTF8Len(u8x8, pre);
 209              		.loc 1 68 5 view .LVU57
 210 00bc 0027     		movs	r7, #0
 211              	.LVL29:
  68:Core/Src/u8g2/Src/u8x8_input_value.c ****   width = u8x8_GetUTF8Len(u8x8, pre);
 212              		.loc 1 68 5 view .LVU58
 213 00be CDE7     		b	.L3
 214              	.LVL30:
 215              	.L19:
  89:Core/Src/u8g2/Src/u8x8_input_value.c ****   for(;;)
  90:Core/Src/u8g2/Src/u8x8_input_value.c ****   {
  91:Core/Src/u8g2/Src/u8x8_input_value.c ****     event = u8x8_GetMenuEvent(u8x8);
  92:Core/Src/u8g2/Src/u8x8_input_value.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
  93:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
  94:Core/Src/u8g2/Src/u8x8_input_value.c ****       *value = local_value;
 216              		.loc 1 94 7 is_stmt 1 view .LVU59
 217              		.loc 1 94 14 is_stmt 0 view .LVU60
 218 00c0 039B     		ldr	r3, [sp, #12]
 219 00c2 1C70     		strb	r4, [r3]
  95:Core/Src/u8g2/Src/u8x8_input_value.c ****       r = 1;
 220              		.loc 1 95 7 is_stmt 1 view .LVU61
 221              	.LVL31:
  96:Core/Src/u8g2/Src/u8x8_input_value.c ****       break;
 222              		.loc 1 96 7 view .LVU62
  95:Core/Src/u8g2/Src/u8x8_input_value.c ****       r = 1;
 223              		.loc 1 95 9 is_stmt 0 view .LVU63
 224 00c4 0120     		movs	r0, #1
 225              	.LVL32:
 226              	.L6:
  97:Core/Src/u8g2/Src/u8x8_input_value.c ****     }
  98:Core/Src/u8g2/Src/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_HOME )
  99:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 100:Core/Src/u8g2/Src/u8x8_input_value.c ****       r = 0;
 101:Core/Src/u8g2/Src/u8x8_input_value.c ****       break;
 102:Core/Src/u8g2/Src/u8x8_input_value.c ****     }
 103:Core/Src/u8g2/Src/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_NEXT || event == U8X8_MSG_GPIO_MENU_UP )
 104:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 105:Core/Src/u8g2/Src/u8x8_input_value.c ****       if ( local_value >= hi )
 106:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value = lo;
 107:Core/Src/u8g2/Src/u8x8_input_value.c ****       else
 108:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value++;
 109:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 110:Core/Src/u8g2/Src/u8x8_input_value.c ****     }
 111:Core/Src/u8g2/Src/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_PREV || event == U8X8_MSG_GPIO_MENU_DOWN )
 112:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 113:Core/Src/u8g2/Src/u8x8_input_value.c ****       if ( local_value <= lo )
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 7


 114:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value = hi;
 115:Core/Src/u8g2/Src/u8x8_input_value.c ****       else
 116:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value--;
 117:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 118:Core/Src/u8g2/Src/u8x8_input_value.c ****     }        
 119:Core/Src/u8g2/Src/u8x8_input_value.c ****   }
 120:Core/Src/u8g2/Src/u8x8_input_value.c ****   
 121:Core/Src/u8g2/Src/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 0);
 227              		.loc 1 121 3 is_stmt 1 view .LVU64
 228 00c6 0023     		movs	r3, #0
 229 00c8 85F82330 		strb	r3, [r5, #35]
 122:Core/Src/u8g2/Src/u8x8_input_value.c ****   return r;  
 230              		.loc 1 122 3 view .LVU65
 123:Core/Src/u8g2/Src/u8x8_input_value.c **** }
 231              		.loc 1 123 1 is_stmt 0 view .LVU66
 232 00cc 05B0     		add	sp, sp, #20
 233              	.LCFI2:
 234              		.cfi_remember_state
 235              		.cfi_def_cfa_offset 36
 236              		@ sp needed
 237 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 238              	.LVL33:
 239              	.L7:
 240              	.LCFI3:
 241              		.cfi_restore_state
 105:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value = lo;
 242              		.loc 1 105 7 is_stmt 1 view .LVU67
 105:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value = lo;
 243              		.loc 1 105 10 is_stmt 0 view .LVU68
 244 00d2 4C45     		cmp	r4, r9
 245 00d4 02D2     		bcs	.L16
 108:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 246              		.loc 1 108 2 is_stmt 1 view .LVU69
 108:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 247              		.loc 1 108 13 is_stmt 0 view .LVU70
 248 00d6 0134     		adds	r4, r4, #1
 249              	.LVL34:
 108:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 250              		.loc 1 108 13 view .LVU71
 251 00d8 E4B2     		uxtb	r4, r4
 252              	.LVL35:
 108:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 253              		.loc 1 108 13 view .LVU72
 254 00da 00E0     		b	.L9
 255              	.L16:
 106:Core/Src/u8g2/Src/u8x8_input_value.c ****       else
 256              		.loc 1 106 14 view .LVU73
 257 00dc 5446     		mov	r4, r10
 258              	.LVL36:
 259              	.L9:
 109:Core/Src/u8g2/Src/u8x8_input_value.c ****     }
 260              		.loc 1 109 7 is_stmt 1 view .LVU74
 261 00de 4146     		mov	r1, r8
 262 00e0 2046     		mov	r0, r4
 263              	.LVL37:
 109:Core/Src/u8g2/Src/u8x8_input_value.c ****     }
 264              		.loc 1 109 7 is_stmt 0 view .LVU75
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 8


 265 00e2 FFF7FEFF 		bl	u8x8_u8toa
 266              	.LVL38:
 267 00e6 0346     		mov	r3, r0
 268 00e8 3246     		mov	r2, r6
 269 00ea 3946     		mov	r1, r7
 270 00ec 2846     		mov	r0, r5
 271 00ee FFF7FEFF 		bl	u8x8_DrawUTF8
 272              	.LVL39:
 273              	.L4:
  89:Core/Src/u8g2/Src/u8x8_input_value.c ****   {
 274              		.loc 1 89 3 is_stmt 1 view .LVU76
  91:Core/Src/u8g2/Src/u8x8_input_value.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 275              		.loc 1 91 5 view .LVU77
  91:Core/Src/u8g2/Src/u8x8_input_value.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 276              		.loc 1 91 13 is_stmt 0 view .LVU78
 277 00f2 2846     		mov	r0, r5
 278 00f4 FFF7FEFF 		bl	u8x8_GetMenuEvent
 279              	.LVL40:
  92:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 280              		.loc 1 92 5 is_stmt 1 view .LVU79
  92:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 281              		.loc 1 92 8 is_stmt 0 view .LVU80
 282 00f8 5028     		cmp	r0, #80
 283 00fa E1D0     		beq	.L19
  98:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 284              		.loc 1 98 10 is_stmt 1 view .LVU81
  98:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 285              		.loc 1 98 13 is_stmt 0 view .LVU82
 286 00fc 5328     		cmp	r0, #83
 287 00fe 18D0     		beq	.L15
 103:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 288              		.loc 1 103 10 is_stmt 1 view .LVU83
 103:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 289              		.loc 1 103 13 is_stmt 0 view .LVU84
 290 0100 5128     		cmp	r0, #81
 291 0102 E6D0     		beq	.L7
 103:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 292              		.loc 1 103 48 discriminator 1 view .LVU85
 293 0104 5428     		cmp	r0, #84
 294 0106 E4D0     		beq	.L7
 111:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 295              		.loc 1 111 10 is_stmt 1 view .LVU86
 111:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 296              		.loc 1 111 13 is_stmt 0 view .LVU87
 297 0108 5228     		cmp	r0, #82
 298 010a 01D0     		beq	.L11
 111:Core/Src/u8g2/Src/u8x8_input_value.c ****     {
 299              		.loc 1 111 48 discriminator 1 view .LVU88
 300 010c 5528     		cmp	r0, #85
 301 010e F0D1     		bne	.L4
 302              	.L11:
 113:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value = hi;
 303              		.loc 1 113 7 is_stmt 1 view .LVU89
 113:Core/Src/u8g2/Src/u8x8_input_value.c **** 	local_value = hi;
 304              		.loc 1 113 10 is_stmt 0 view .LVU90
 305 0110 5445     		cmp	r4, r10
 306 0112 0CD9     		bls	.L17
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 9


 116:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 307              		.loc 1 116 2 is_stmt 1 view .LVU91
 116:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 308              		.loc 1 116 13 is_stmt 0 view .LVU92
 309 0114 013C     		subs	r4, r4, #1
 310              	.LVL41:
 116:Core/Src/u8g2/Src/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 311              		.loc 1 116 13 view .LVU93
 312 0116 E4B2     		uxtb	r4, r4
 313              	.LVL42:
 314              	.L12:
 117:Core/Src/u8g2/Src/u8x8_input_value.c ****     }        
 315              		.loc 1 117 7 is_stmt 1 view .LVU94
 316 0118 4146     		mov	r1, r8
 317 011a 2046     		mov	r0, r4
 318              	.LVL43:
 117:Core/Src/u8g2/Src/u8x8_input_value.c ****     }        
 319              		.loc 1 117 7 is_stmt 0 view .LVU95
 320 011c FFF7FEFF 		bl	u8x8_u8toa
 321              	.LVL44:
 322 0120 0346     		mov	r3, r0
 323 0122 3246     		mov	r2, r6
 324 0124 3946     		mov	r1, r7
 325 0126 2846     		mov	r0, r5
 326 0128 FFF7FEFF 		bl	u8x8_DrawUTF8
 327              	.LVL45:
 328 012c E1E7     		b	.L4
 329              	.LVL46:
 330              	.L17:
 114:Core/Src/u8g2/Src/u8x8_input_value.c ****       else
 331              		.loc 1 114 14 view .LVU96
 332 012e 4C46     		mov	r4, r9
 333              	.LVL47:
 114:Core/Src/u8g2/Src/u8x8_input_value.c ****       else
 334              		.loc 1 114 14 view .LVU97
 335 0130 F2E7     		b	.L12
 336              	.LVL48:
 337              	.L15:
 100:Core/Src/u8g2/Src/u8x8_input_value.c ****       break;
 338              		.loc 1 100 9 view .LVU98
 339 0132 0020     		movs	r0, #0
 340              	.LVL49:
 100:Core/Src/u8g2/Src/u8x8_input_value.c ****       break;
 341              		.loc 1 100 9 view .LVU99
 342 0134 C7E7     		b	.L6
 343              		.cfi_endproc
 344              	.LFE0:
 346              		.text
 347              	.Letext0:
 348              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 349              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 350              		.file 4 "Core/Src/u8g2/Inc/u8x8.h"
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_input_value.c
C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s:20     .text.u8x8_UserInterfaceInputValue:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccLDm1lD.s:26     .text.u8x8_UserInterfaceInputValue:00000000 u8x8_UserInterfaceInputValue

UNDEFINED SYMBOLS
u8x8_GetStringLineCnt
u8x8_GetUTF8Len
u8x8_ClearDisplay
u8x8_DrawUTF8Lines
u8x8_DrawUTF8
u8x8_u8toa
u8x8_GetMenuEvent
