ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"u8g2_ll_hvline.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.u8g2_ll_hvline_vertical_top_lsb,"ax",%progbits
  20              		.align	1
  21              		.global	u8g2_ll_hvline_vertical_top_lsb
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	u8g2_ll_hvline_vertical_top_lsb:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/u8g2/Src/u8g2_ll_hvline.c"
   1:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*
   2:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
   3:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   u8g2_ll_hvline.c
   4:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   
   5:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   low level hvline
   6:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
   7:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   8:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
   9:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   Copyright (c) 2016, olikraus@gmail.com
  10:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   All rights reserved.
  11:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  12:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   Redistribution and use in source and binary forms, with or without modification, 
  13:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   are permitted provided that the following conditions are met:
  14:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  15:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  16:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     of conditions and the following disclaimer.
  17:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     
  18:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  19:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  20:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     materials provided with the distribution.
  21:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  22:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  23:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  24:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  26:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  27:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  28:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  29:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 2


  30:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  31:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  32:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  33:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  34:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  35:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  36:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  37:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   *ptr |= or_mask
  38:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   *ptr ^= xor_mask
  39:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   
  40:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   color = 0:   or_mask = 1, xor_mask = 1
  41:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   color = 1:   or_mask = 1, xor_mask = 0
  42:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   color = 2:   or_mask = 0, xor_mask = 1
  43:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  44:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( color <= 1 )
  45:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     or_mask  = mask;
  46:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( color != 1 )
  47:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     xor_mask = mask;
  48:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     
  49:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** */
  50:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  51:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #include "u8g2.h"
  52:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #include <assert.h>
  53:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  54:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*=================================================*/
  55:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*
  56:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   u8g2_ll_hvline_vertical_top_lsb
  57:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     SSD13xx
  58:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     UC1701    
  59:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** */
  60:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  61:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  62:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #ifdef U8G2_WITH_HVLINE_SPEED_OPTIMIZATION
  63:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  64:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*
  65:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   x,y		Upper left position of the line within the local buffer (not the display!)
  66:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   len		length of the line in pixel, len must not be 0
  67:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   dir		0: horizontal line (left to right)
  68:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 		1: vertical line (top to bottom)
  69:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   asumption: 
  70:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     all clipping done
  71:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** */
  72:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, u
  73:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** {
  30              		.loc 1 73 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 73 1 is_stmt 0 view .LVU1
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 14, -4
  42 0002 9DF81050 		ldrb	r5, [sp, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 3


  74:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint16_t offset;
  43              		.loc 1 74 3 is_stmt 1 view .LVU2
  75:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t *ptr;
  44              		.loc 1 75 3 view .LVU3
  76:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t bit_pos, mask;
  45              		.loc 1 76 3 view .LVU4
  77:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t or_mask, xor_mask;
  46              		.loc 1 77 3 view .LVU5
  78:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #ifdef __unix
  79:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t *max_ptr = u8g2->tile_buf_ptr + u8g2_GetU8x8(u8g2)->display_info->tile_width*u8g2->tile_b
  80:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #endif
  81:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  82:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(x >= u8g2->buf_x0);
  83:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(x < u8g2_GetU8x8(u8g2)->display_info->tile_width*8);
  84:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(y >= u8g2->buf_y0);
  85:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  86:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   
  87:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  88:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   bit_pos = y;		/* overflow truncate is ok here... */
  47              		.loc 1 88 3 view .LVU6
  48              	.LVL1:
  89:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  49              		.loc 1 89 3 view .LVU7
  50              		.loc 1 89 11 is_stmt 0 view .LVU8
  51 0006 02F0070E 		and	lr, r2, #7
  52              	.LVL2:
  90:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   mask = 1;
  53              		.loc 1 90 3 is_stmt 1 view .LVU9
  91:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   mask <<= bit_pos;
  54              		.loc 1 91 3 view .LVU10
  55              		.loc 1 91 8 is_stmt 0 view .LVU11
  56 000a 4FF0010C 		mov	ip, #1
  57 000e 0CFA0EFC 		lsl	ip, ip, lr
  58 0012 5FFA8CFC 		uxtb	ip, ip
  59              	.LVL3:
  92:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
  93:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   or_mask = 0;
  60              		.loc 1 93 3 is_stmt 1 view .LVU12
  94:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   xor_mask = 0;
  61              		.loc 1 94 3 view .LVU13
  95:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
  62              		.loc 1 95 3 view .LVU14
  63              		.loc 1 95 12 is_stmt 0 view .LVU15
  64 0016 90F89260 		ldrb	r6, [r0, #146]	@ zero_extendqisi2
  65              		.loc 1 95 6 view .LVU16
  66 001a 012E     		cmp	r6, #1
  67 001c 1BD9     		bls	.L10
  93:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   xor_mask = 0;
  68              		.loc 1 93 11 view .LVU17
  69 001e 0024     		movs	r4, #0
  70              	.L2:
  71              	.LVL4:
  96:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     or_mask  = mask;
  97:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( u8g2->draw_color != 1 )
  72              		.loc 1 97 3 is_stmt 1 view .LVU18
  73              		.loc 1 97 6 is_stmt 0 view .LVU19
  74 0020 012E     		cmp	r6, #1
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 4


  75 0022 1AD0     		beq	.L14
  76              	.LVL5:
  77              	.L3:
  98:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     xor_mask = mask;
  99:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 100:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 101:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  78              		.loc 1 101 3 is_stmt 1 view .LVU20
 102:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset &= ~7;
  79              		.loc 1 102 3 view .LVU21
  80              		.loc 1 102 10 is_stmt 0 view .LVU22
  81 0024 22F00702 		bic	r2, r2, #7
  82              	.LVL6:
  83              		.loc 1 102 10 view .LVU23
  84 0028 92B2     		uxth	r2, r2
  85              	.LVL7:
 103:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
  86              		.loc 1 103 3 is_stmt 1 view .LVU24
  87              		.loc 1 103 45 is_stmt 0 view .LVU25
  88 002a 0668     		ldr	r6, [r0]
  89 002c 367C     		ldrb	r6, [r6, #16]	@ zero_extendqisi2
  90              		.loc 1 103 10 view .LVU26
  91 002e 16FB02F2 		smulbb	r2, r6, r2
  92              	.LVL8:
  93              		.loc 1 103 10 view .LVU27
  94 0032 92B2     		uxth	r2, r2
  95              	.LVL9:
 104:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr = u8g2->tile_buf_ptr;
  96              		.loc 1 104 3 is_stmt 1 view .LVU28
 105:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr += offset;
  97              		.loc 1 105 3 view .LVU29
 106:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr += x;
  98              		.loc 1 106 3 view .LVU30
  99              		.loc 1 106 7 is_stmt 0 view .LVU31
 100 0034 0A44     		add	r2, r2, r1
 101              	.LVL10:
 102              		.loc 1 106 7 view .LVU32
 103 0036 416B     		ldr	r1, [r0, #52]
 104              	.LVL11:
 105              		.loc 1 106 7 view .LVU33
 106 0038 1144     		add	r1, r1, r2
 107              	.LVL12:
 107:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   
 108:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( dir == 0 )
 108              		.loc 1 108 3 is_stmt 1 view .LVU34
 109              		.loc 1 108 6 is_stmt 0 view .LVU35
 110 003a DDB9     		cbnz	r5, .L4
 111              	.L5:
 109:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   {
 110:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       do
 112              		.loc 1 110 7 is_stmt 1 discriminator 1 view .LVU36
 111:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 112:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #ifdef __unix
 113:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	assert(ptr < max_ptr);
 114:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #endif
 115:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= or_mask;
 113              		.loc 1 115 2 discriminator 1 view .LVU37
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 5


 114              		.loc 1 115 7 is_stmt 0 discriminator 1 view .LVU38
 115 003c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 116 003e 2243     		orrs	r2, r2, r4
 117 0040 D2B2     		uxtb	r2, r2
 118 0042 0A70     		strb	r2, [r1]
 116:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr ^= xor_mask;
 119              		.loc 1 116 2 is_stmt 1 discriminator 1 view .LVU39
 120              		.loc 1 116 7 is_stmt 0 discriminator 1 view .LVU40
 121 0044 82EA0C02 		eor	r2, r2, ip
 122 0048 01F8012B 		strb	r2, [r1], #1
 123              	.LVL13:
 117:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	ptr++;
 124              		.loc 1 117 2 is_stmt 1 discriminator 1 view .LVU41
 118:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	len--;
 125              		.loc 1 118 2 discriminator 1 view .LVU42
 126              		.loc 1 118 5 is_stmt 0 discriminator 1 view .LVU43
 127 004c 013B     		subs	r3, r3, #1
 128              	.LVL14:
 129              		.loc 1 118 5 discriminator 1 view .LVU44
 130 004e 9BB2     		uxth	r3, r3
 131              	.LVL15:
 119:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       } while( len != 0 );
 132              		.loc 1 119 14 is_stmt 1 discriminator 1 view .LVU45
 133              		.loc 1 119 7 is_stmt 0 discriminator 1 view .LVU46
 134 0050 002B     		cmp	r3, #0
 135 0052 F3D1     		bne	.L5
 136              	.LVL16:
 137              	.L1:
 120:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 121:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   else
 122:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   {    
 123:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     do
 124:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 125:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #ifdef __unix
 126:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       assert(ptr < max_ptr);
 127:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #endif
 128:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       *ptr |= or_mask;
 129:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       *ptr ^= xor_mask;
 130:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 131:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       bit_pos++;
 132:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       bit_pos &= 7;
 133:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 134:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       len--;
 135:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 136:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( bit_pos == 0 )
 137:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 138:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 
 139:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 		
 140:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color <= 1 )
 141:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	  or_mask  = 1;
 142:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color != 1 )
 143:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	  xor_mask = 1;
 144:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 145:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       else
 146:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 147:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	or_mask <<= 1;
 148:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 6


 149:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 150:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     } while( len != 0 );
 151:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 152:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** }
 138              		.loc 1 152 1 view .LVU47
 139 0054 70BD     		pop	{r4, r5, r6, pc}
 140              	.LVL17:
 141              	.L10:
  96:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( u8g2->draw_color != 1 )
 142              		.loc 1 96 14 view .LVU48
 143 0056 6446     		mov	r4, ip
 144 0058 E2E7     		b	.L2
 145              	.LVL18:
 146              	.L14:
  94:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
 147              		.loc 1 94 12 view .LVU49
 148 005a 4FF0000C 		mov	ip, #0
 149              	.LVL19:
  94:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
 150              		.loc 1 94 12 view .LVU50
 151 005e E1E7     		b	.L3
 152              	.LVL20:
 153              	.L15:
 141:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color != 1 )
 154              		.loc 1 141 13 view .LVU51
 155 0060 0124     		movs	r4, #1
 156              	.LVL21:
 141:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color != 1 )
 157              		.loc 1 141 13 view .LVU52
 158 0062 1BE0     		b	.L8
 159              	.LVL22:
 160              	.L7:
 147:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
 161              		.loc 1 147 2 is_stmt 1 view .LVU53
 147:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
 162              		.loc 1 147 10 is_stmt 0 view .LVU54
 163 0064 6400     		lsls	r4, r4, #1
 164              	.LVL23:
 147:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
 165              		.loc 1 147 10 view .LVU55
 166 0066 E4B2     		uxtb	r4, r4
 167              	.LVL24:
 148:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 168              		.loc 1 148 2 is_stmt 1 view .LVU56
 148:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 169              		.loc 1 148 11 is_stmt 0 view .LVU57
 170 0068 4FEA4C0C 		lsl	ip, ip, #1
 171              	.LVL25:
 148:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 172              		.loc 1 148 11 view .LVU58
 173 006c 5FFA8CFC 		uxtb	ip, ip
 174              	.LVL26:
 175              	.L9:
 150:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 176              		.loc 1 150 12 is_stmt 1 view .LVU59
 150:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 177              		.loc 1 150 5 is_stmt 0 view .LVU60
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 7


 178 0070 002B     		cmp	r3, #0
 179 0072 EFD0     		beq	.L1
 180              	.L4:
 181              	.LVL27:
 123:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 182              		.loc 1 123 5 is_stmt 1 view .LVU61
 128:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       *ptr ^= xor_mask;
 183              		.loc 1 128 7 view .LVU62
 128:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       *ptr ^= xor_mask;
 184              		.loc 1 128 12 is_stmt 0 view .LVU63
 185 0074 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 186 0076 2243     		orrs	r2, r2, r4
 187 0078 D2B2     		uxtb	r2, r2
 188 007a 0A70     		strb	r2, [r1]
 129:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 189              		.loc 1 129 7 is_stmt 1 view .LVU64
 129:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 190              		.loc 1 129 12 is_stmt 0 view .LVU65
 191 007c 82EA0C02 		eor	r2, r2, ip
 192 0080 0A70     		strb	r2, [r1]
 131:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       bit_pos &= 7;
 193              		.loc 1 131 7 is_stmt 1 view .LVU66
 131:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       bit_pos &= 7;
 194              		.loc 1 131 14 is_stmt 0 view .LVU67
 195 0082 0EF10102 		add	r2, lr, #1
 196              	.LVL28:
 132:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 197              		.loc 1 132 7 is_stmt 1 view .LVU68
 134:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 198              		.loc 1 134 7 view .LVU69
 134:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 199              		.loc 1 134 10 is_stmt 0 view .LVU70
 200 0086 013B     		subs	r3, r3, #1
 201              	.LVL29:
 134:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 202              		.loc 1 134 10 view .LVU71
 203 0088 9BB2     		uxth	r3, r3
 204              	.LVL30:
 136:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 205              		.loc 1 136 7 is_stmt 1 view .LVU72
 136:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 206              		.loc 1 136 10 is_stmt 0 view .LVU73
 207 008a 12F0070E 		ands	lr, r2, #7
 208 008e E9D1     		bne	.L7
 138:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 		
 209              		.loc 1 138 2 is_stmt 1 view .LVU74
 138:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 		
 210              		.loc 1 138 11 is_stmt 0 view .LVU75
 211 0090 428F     		ldrh	r2, [r0, #58]
 212              	.LVL31:
 138:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 		
 213              		.loc 1 138 5 view .LVU76
 214 0092 1144     		add	r1, r1, r2
 215              	.LVL32:
 140:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	  or_mask  = 1;
 216              		.loc 1 140 2 is_stmt 1 view .LVU77
 140:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	  or_mask  = 1;
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 8


 217              		.loc 1 140 11 is_stmt 0 view .LVU78
 218 0094 90F89220 		ldrb	r2, [r0, #146]	@ zero_extendqisi2
 140:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	  or_mask  = 1;
 219              		.loc 1 140 5 view .LVU79
 220 0098 012A     		cmp	r2, #1
 221 009a E1D9     		bls	.L15
 222              	.LVL33:
 223              	.L8:
 142:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	  xor_mask = 1;
 224              		.loc 1 142 2 is_stmt 1 view .LVU80
 142:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	  xor_mask = 1;
 225              		.loc 1 142 5 is_stmt 0 view .LVU81
 226 009c 012A     		cmp	r2, #1
 227 009e E7D0     		beq	.L9
 143:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 228              		.loc 1 143 13 view .LVU82
 229 00a0 4FF0010C 		mov	ip, #1
 230              	.LVL34:
 143:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 231              		.loc 1 143 13 view .LVU83
 232 00a4 E4E7     		b	.L9
 233              		.cfi_endproc
 234              	.LFE0:
 236              		.section	.text.u8g2_ll_hvline_horizontal_right_lsb,"ax",%progbits
 237              		.align	1
 238              		.global	u8g2_ll_hvline_horizontal_right_lsb
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 243              	u8g2_ll_hvline_horizontal_right_lsb:
 244              	.LVL35:
 245              	.LFB1:
 153:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 154:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 155:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 156:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #else /* U8G2_WITH_HVLINE_SPEED_OPTIMIZATION */
 157:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 158:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*
 159:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   x,y position within the buffer
 160:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** */
 161:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** static void u8g2_draw_pixel_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
 162:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** {
 163:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint16_t offset;
 164:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t *ptr;
 165:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t bit_pos, mask;
 166:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   
 167:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(x >= u8g2->buf_x0);
 168:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(x < u8g2_GetU8x8(u8g2)->display_info->tile_width*8);
 169:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(y >= u8g2->buf_y0);
 170:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
 171:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   
 172:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
 173:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   bit_pos = y;		/* overflow truncate is ok here... */
 174:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
 175:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   mask = 1;
 176:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   mask <<= bit_pos;
 177:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 9


 178:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
 179:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset &= ~7;
 180:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
 181:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr = u8g2->tile_buf_ptr;
 182:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr += offset;
 183:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr += x;
 184:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 185:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 186:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
 187:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     *ptr |= mask;
 188:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( u8g2->draw_color != 1 )
 189:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     *ptr ^= mask;
 190:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 191:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** }
 192:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 193:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*
 194:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   x,y		Upper left position of the line within the local buffer (not the display!)
 195:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   len		length of the line in pixel, len must not be 0
 196:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   dir		0: horizontal line (left to right)
 197:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 		1: vertical line (top to bottom)
 198:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   asumption: 
 199:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     all clipping done
 200:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** */
 201:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, u
 202:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** {
 203:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( dir == 0 )
 204:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   {
 205:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     do
 206:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 207:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       u8g2_draw_pixel_vertical_top_lsb(u8g2, x, y);
 208:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       x++;
 209:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       len--;
 210:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     } while( len != 0 );
 211:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 212:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   else
 213:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   {
 214:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     do
 215:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 216:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       u8g2_draw_pixel_vertical_top_lsb(u8g2, x, y);
 217:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       y++;
 218:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       len--;
 219:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     } while( len != 0 );
 220:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 221:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** }
 222:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 223:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 224:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #endif /* U8G2_WITH_HVLINE_SPEED_OPTIMIZATION */
 225:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 226:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*=================================================*/
 227:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*
 228:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   u8g2_ll_hvline_horizontal_right_lsb
 229:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     ST7920
 230:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** */
 231:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 232:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** #ifdef U8G2_WITH_HVLINE_SPEED_OPTIMIZATION
 233:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 234:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /*
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 10


 235:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   x,y		Upper left position of the line within the local buffer (not the display!)
 236:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   len		length of the line in pixel, len must not be 0
 237:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   dir		0: horizontal line (left to right)
 238:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 		1: vertical line (top to bottom)
 239:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   asumption: 
 240:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     all clipping done
 241:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** */
 242:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 243:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** /* SH1122, LD7032, ST7920, ST7986, LC7981, T6963, SED1330, RA8835, MAX7219, LS0 */ 
 244:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** void u8g2_ll_hvline_horizontal_right_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t le
 245:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** {
 246              		.loc 1 245 1 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 4, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		.loc 1 245 1 is_stmt 0 view .LVU85
 251 0000 30B5     		push	{r4, r5, lr}
 252              	.LCFI1:
 253              		.cfi_def_cfa_offset 12
 254              		.cfi_offset 4, -12
 255              		.cfi_offset 5, -8
 256              		.cfi_offset 14, -4
 257 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 246:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint16_t offset;
 258              		.loc 1 246 3 is_stmt 1 view .LVU86
 247:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t *ptr;
 259              		.loc 1 247 3 view .LVU87
 248:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t bit_pos;
 260              		.loc 1 248 3 view .LVU88
 249:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t mask;
 261              		.loc 1 249 3 view .LVU89
 250:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   uint8_t tile_width = u8g2_GetU8x8(u8g2)->display_info->tile_width;
 262              		.loc 1 250 3 view .LVU90
 263              		.loc 1 250 42 is_stmt 0 view .LVU91
 264 0006 0568     		ldr	r5, [r0]
 265              		.loc 1 250 11 view .LVU92
 266 0008 95F810E0 		ldrb	lr, [r5, #16]	@ zero_extendqisi2
 267              	.LVL36:
 251:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 252:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   bit_pos = x;		/* overflow truncate is ok here... */
 268              		.loc 1 252 3 is_stmt 1 view .LVU93
 253:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
 269              		.loc 1 253 3 view .LVU94
 270              		.loc 1 253 11 is_stmt 0 view .LVU95
 271 000c 01F00705 		and	r5, r1, #7
 272              	.LVL37:
 254:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   mask = 128;
 273              		.loc 1 254 3 is_stmt 1 view .LVU96
 255:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   mask >>= bit_pos;
 274              		.loc 1 255 3 view .LVU97
 275              		.loc 1 255 8 is_stmt 0 view .LVU98
 276 0010 4FF0800C 		mov	ip, #128
 277 0014 4CFA05FC 		asr	ip, ip, r5
 278 0018 5FFA8CFC 		uxtb	ip, ip
 279              	.LVL38:
 256:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 257:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 11


 280              		.loc 1 257 3 is_stmt 1 view .LVU99
 258:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset *= tile_width;
 281              		.loc 1 258 3 view .LVU100
 282              		.loc 1 258 10 is_stmt 0 view .LVU101
 283 001c 1EFB02F2 		smulbb	r2, lr, r2
 284              	.LVL39:
 259:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   offset += x>>3;
 285              		.loc 1 259 3 is_stmt 1 view .LVU102
 286              		.loc 1 259 10 is_stmt 0 view .LVU103
 287 0020 C908     		lsrs	r1, r1, #3
 288              	.LVL40:
 289              		.loc 1 259 10 view .LVU104
 290 0022 11FA82F2 		uxtah	r2, r1, r2
 291              	.LVL41:
 260:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr = u8g2->tile_buf_ptr;
 292              		.loc 1 260 3 is_stmt 1 view .LVU105
 293              		.loc 1 260 7 is_stmt 0 view .LVU106
 294 0026 416B     		ldr	r1, [r0, #52]
 295              	.LVL42:
 261:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   ptr += offset;
 296              		.loc 1 261 3 is_stmt 1 view .LVU107
 297              		.loc 1 261 7 is_stmt 0 view .LVU108
 298 0028 11FA82F2 		uxtah	r2, r1, r2
 299              	.LVL43:
 262:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   
 263:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   if ( dir == 0 )
 300              		.loc 1 263 3 is_stmt 1 view .LVU109
 301              		.loc 1 263 6 is_stmt 0 view .LVU110
 302 002c 3CBB     		cbnz	r4, .L17
 303 002e 0AE0     		b	.L21
 304              	.L26:
 264:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   {
 265:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 266:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     do
 267:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 268:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 
 269:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( u8g2->draw_color <= 1 )
 270:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 305              		.loc 1 270 2 is_stmt 1 view .LVU111
 306              		.loc 1 270 7 is_stmt 0 view .LVU112
 307 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 308 0032 4CEA0101 		orr	r1, ip, r1
 309 0036 1170     		strb	r1, [r2]
 310 0038 09E0     		b	.L18
 311              	.LVL44:
 312              	.L27:
 271:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( u8g2->draw_color != 1 )
 272:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 273:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 274:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       mask >>= 1;
 275:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( mask == 0 )
 276:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 277:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	mask = 128;
 313              		.loc 1 277 2 is_stmt 1 view .LVU113
 278:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****         ptr++;
 314              		.loc 1 278 9 view .LVU114
 315              		.loc 1 278 12 is_stmt 0 view .LVU115
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 12


 316 003a 0132     		adds	r2, r2, #1
 317              	.LVL45:
 277:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****         ptr++;
 318              		.loc 1 277 7 view .LVU116
 319 003c 4FF0800C 		mov	ip, #128
 320              	.LVL46:
 321              	.L20:
 279:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       }
 280:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 281:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       //x++;
 282:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       len--;
 322              		.loc 1 282 7 is_stmt 1 view .LVU117
 323              		.loc 1 282 10 is_stmt 0 view .LVU118
 324 0040 013B     		subs	r3, r3, #1
 325              	.LVL47:
 326              		.loc 1 282 10 view .LVU119
 327 0042 9BB2     		uxth	r3, r3
 328              	.LVL48:
 283:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     } while( len != 0 );
 329              		.loc 1 283 12 is_stmt 1 view .LVU120
 330              		.loc 1 283 5 is_stmt 0 view .LVU121
 331 0044 23B3     		cbz	r3, .L16
 332              	.L21:
 266:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 333              		.loc 1 266 5 is_stmt 1 view .LVU122
 269:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 334              		.loc 1 269 7 view .LVU123
 269:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 335              		.loc 1 269 16 is_stmt 0 view .LVU124
 336 0046 90F89210 		ldrb	r1, [r0, #146]	@ zero_extendqisi2
 269:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 337              		.loc 1 269 10 view .LVU125
 338 004a 0129     		cmp	r1, #1
 339 004c F0D9     		bls	.L26
 340              	.L18:
 271:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 341              		.loc 1 271 7 is_stmt 1 view .LVU126
 271:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 342              		.loc 1 271 16 is_stmt 0 view .LVU127
 343 004e 90F89210 		ldrb	r1, [r0, #146]	@ zero_extendqisi2
 271:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 344              		.loc 1 271 10 view .LVU128
 345 0052 0129     		cmp	r1, #1
 346 0054 03D0     		beq	.L19
 272:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 347              		.loc 1 272 2 is_stmt 1 view .LVU129
 272:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 348              		.loc 1 272 7 is_stmt 0 view .LVU130
 349 0056 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 350 0058 8CEA0101 		eor	r1, ip, r1
 351 005c 1170     		strb	r1, [r2]
 352              	.L19:
 274:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( mask == 0 )
 353              		.loc 1 274 7 is_stmt 1 view .LVU131
 354              	.LVL49:
 275:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 355              		.loc 1 275 7 view .LVU132
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 13


 275:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 356              		.loc 1 275 10 is_stmt 0 view .LVU133
 357 005e 5FEA5C0C 		lsrs	ip, ip, #1
 358              	.LVL50:
 275:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       {
 359              		.loc 1 275 10 view .LVU134
 360 0062 EDD1     		bne	.L20
 361 0064 E9E7     		b	.L27
 362              	.LVL51:
 363              	.L23:
 284:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 285:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   else
 286:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   {
 287:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     do
 288:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 289:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( u8g2->draw_color <= 1 )
 290:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 291:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( u8g2->draw_color != 1 )
 364              		.loc 1 291 7 is_stmt 1 view .LVU135
 365              		.loc 1 291 16 is_stmt 0 view .LVU136
 366 0066 90F89210 		ldrb	r1, [r0, #146]	@ zero_extendqisi2
 367              		.loc 1 291 10 view .LVU137
 368 006a 0129     		cmp	r1, #1
 369 006c 03D0     		beq	.L24
 292:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 370              		.loc 1 292 2 is_stmt 1 view .LVU138
 371              		.loc 1 292 7 is_stmt 0 view .LVU139
 372 006e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 373 0070 8CEA0101 		eor	r1, ip, r1
 374 0074 1170     		strb	r1, [r2]
 375              	.L24:
 293:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       
 294:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       ptr += tile_width;
 376              		.loc 1 294 7 is_stmt 1 view .LVU140
 377              		.loc 1 294 11 is_stmt 0 view .LVU141
 378 0076 7244     		add	r2, r2, lr
 379              	.LVL52:
 295:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       //y++;
 296:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       len--;
 380              		.loc 1 296 7 is_stmt 1 view .LVU142
 381              		.loc 1 296 10 is_stmt 0 view .LVU143
 382 0078 013B     		subs	r3, r3, #1
 383              	.LVL53:
 384              		.loc 1 296 10 view .LVU144
 385 007a 9BB2     		uxth	r3, r3
 386              	.LVL54:
 297:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     } while( len != 0 );
 387              		.loc 1 297 12 is_stmt 1 view .LVU145
 388              		.loc 1 297 5 is_stmt 0 view .LVU146
 389 007c 43B1     		cbz	r3, .L16
 390              	.L17:
 287:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****     {
 391              		.loc 1 287 5 is_stmt 1 view .LVU147
 289:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 392              		.loc 1 289 7 view .LVU148
 289:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 393              		.loc 1 289 16 is_stmt 0 view .LVU149
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 14


 394 007e 90F89210 		ldrb	r1, [r0, #146]	@ zero_extendqisi2
 289:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** 	*ptr |= mask;
 395              		.loc 1 289 10 view .LVU150
 396 0082 0129     		cmp	r1, #1
 397 0084 EFD8     		bhi	.L23
 290:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( u8g2->draw_color != 1 )
 398              		.loc 1 290 2 is_stmt 1 view .LVU151
 290:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****       if ( u8g2->draw_color != 1 )
 399              		.loc 1 290 7 is_stmt 0 view .LVU152
 400 0086 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 401 0088 4CEA0101 		orr	r1, ip, r1
 402 008c 1170     		strb	r1, [r2]
 403 008e EAE7     		b	.L23
 404              	.L16:
 298:Core/Src/u8g2/Src/u8g2_ll_hvline.c ****   }
 299:Core/Src/u8g2/Src/u8g2_ll_hvline.c **** }
 405              		.loc 1 299 1 view .LVU153
 406 0090 30BD     		pop	{r4, r5, pc}
 407              		.loc 1 299 1 view .LVU154
 408              		.cfi_endproc
 409              	.LFE1:
 411              		.text
 412              	.Letext0:
 413              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 414              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 415              		.file 4 "Core/Src/u8g2/Inc/u8x8.h"
 416              		.file 5 "Core/Src/u8g2/Inc/u8g2.h"
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_ll_hvline.c
C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s:20     .text.u8g2_ll_hvline_vertical_top_lsb:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s:26     .text.u8g2_ll_hvline_vertical_top_lsb:00000000 u8g2_ll_hvline_vertical_top_lsb
C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s:237    .text.u8g2_ll_hvline_horizontal_right_lsb:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccqgAtUj.s:243    .text.u8g2_ll_hvline_horizontal_right_lsb:00000000 u8g2_ll_hvline_horizontal_right_lsb

NO UNDEFINED SYMBOLS
