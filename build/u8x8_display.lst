ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"u8x8_display.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.u8x8_d_helper_display_setup_memory,"ax",%progbits
  20              		.align	1
  21              		.global	u8x8_d_helper_display_setup_memory
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	u8x8_d_helper_display_setup_memory:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/u8g2/Src/u8x8_display.c"
   1:Core/Src/u8g2/Src/u8x8_display.c **** /*
   2:Core/Src/u8g2/Src/u8x8_display.c ****   
   3:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_display.c
   4:Core/Src/u8g2/Src/u8x8_display.c ****   
   5:Core/Src/u8g2/Src/u8x8_display.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:Core/Src/u8g2/Src/u8x8_display.c **** 
   7:Core/Src/u8g2/Src/u8x8_display.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:Core/Src/u8g2/Src/u8x8_display.c ****   All rights reserved.
   9:Core/Src/u8g2/Src/u8x8_display.c **** 
  10:Core/Src/u8g2/Src/u8x8_display.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:Core/Src/u8g2/Src/u8x8_display.c ****   are permitted provided that the following conditions are met:
  12:Core/Src/u8g2/Src/u8x8_display.c **** 
  13:Core/Src/u8g2/Src/u8x8_display.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:Core/Src/u8g2/Src/u8x8_display.c ****     of conditions and the following disclaimer.
  15:Core/Src/u8g2/Src/u8x8_display.c ****     
  16:Core/Src/u8g2/Src/u8x8_display.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:Core/Src/u8g2/Src/u8x8_display.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:Core/Src/u8g2/Src/u8x8_display.c ****     materials provided with the distribution.
  19:Core/Src/u8g2/Src/u8x8_display.c **** 
  20:Core/Src/u8g2/Src/u8x8_display.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:Core/Src/u8g2/Src/u8x8_display.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:Core/Src/u8g2/Src/u8x8_display.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:Core/Src/u8g2/Src/u8x8_display.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:Core/Src/u8g2/Src/u8x8_display.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:Core/Src/u8g2/Src/u8x8_display.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:Core/Src/u8g2/Src/u8x8_display.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:Core/Src/u8g2/Src/u8x8_display.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:Core/Src/u8g2/Src/u8x8_display.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:Core/Src/u8g2/Src/u8x8_display.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 2


  30:Core/Src/u8g2/Src/u8x8_display.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:Core/Src/u8g2/Src/u8x8_display.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:Core/Src/u8g2/Src/u8x8_display.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:Core/Src/u8g2/Src/u8x8_display.c ****   
  34:Core/Src/u8g2/Src/u8x8_display.c ****   
  35:Core/Src/u8g2/Src/u8x8_display.c ****   Abstraction layer for the graphics controller.
  36:Core/Src/u8g2/Src/u8x8_display.c ****   Main goal is the placement of a 8x8 pixel block (tile) on the display.
  37:Core/Src/u8g2/Src/u8x8_display.c ****   
  38:Core/Src/u8g2/Src/u8x8_display.c **** */
  39:Core/Src/u8g2/Src/u8x8_display.c **** 
  40:Core/Src/u8g2/Src/u8x8_display.c **** 
  41:Core/Src/u8g2/Src/u8x8_display.c **** #include "u8x8.h"
  42:Core/Src/u8g2/Src/u8x8_display.c **** 
  43:Core/Src/u8g2/Src/u8x8_display.c **** 
  44:Core/Src/u8g2/Src/u8x8_display.c **** /*==========================================*/
  45:Core/Src/u8g2/Src/u8x8_display.c **** /* internal library function */
  46:Core/Src/u8g2/Src/u8x8_display.c **** 
  47:Core/Src/u8g2/Src/u8x8_display.c **** /*
  48:Core/Src/u8g2/Src/u8x8_display.c ****   this is a helper function for the U8X8_MSG_DISPLAY_SETUP_MEMORY function.
  49:Core/Src/u8g2/Src/u8x8_display.c ****   It can be called within the display callback function to carry out the usual standard tasks.
  50:Core/Src/u8g2/Src/u8x8_display.c ****   
  51:Core/Src/u8g2/Src/u8x8_display.c **** */
  52:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_d_helper_display_setup_memory(u8x8_t *u8x8, const u8x8_display_info_t *display_info)
  53:Core/Src/u8g2/Src/u8x8_display.c **** {
  30              		.loc 1 53 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  54:Core/Src/u8g2/Src/u8x8_display.c ****       /* 1) set display info struct */
  55:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8->display_info = display_info;
  35              		.loc 1 55 7 view .LVU1
  36              		.loc 1 55 26 is_stmt 0 view .LVU2
  37 0000 0160     		str	r1, [r0]
  56:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8->x_offset = u8x8->display_info->default_x_offset;
  38              		.loc 1 56 7 is_stmt 1 view .LVU3
  39              		.loc 1 56 42 is_stmt 0 view .LVU4
  40 0002 8B7C     		ldrb	r3, [r1, #18]	@ zero_extendqisi2
  41              		.loc 1 56 22 view .LVU5
  42 0004 80F82230 		strb	r3, [r0, #34]
  57:Core/Src/u8g2/Src/u8x8_display.c **** }
  43              		.loc 1 57 1 view .LVU6
  44 0008 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE0:
  48              		.section	.text.u8x8_d_helper_display_init,"ax",%progbits
  49              		.align	1
  50              		.global	u8x8_d_helper_display_init
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	u8x8_d_helper_display_init:
  56              	.LVL1:
  57              	.LFB1:
  58:Core/Src/u8g2/Src/u8x8_display.c **** 
  59:Core/Src/u8g2/Src/u8x8_display.c **** /*
  60:Core/Src/u8g2/Src/u8x8_display.c ****   this is a helper function for the U8X8_MSG_DISPLAY_INIT function.
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 3


  61:Core/Src/u8g2/Src/u8x8_display.c ****   It can be called within the display callback function to carry out the usual standard tasks.
  62:Core/Src/u8g2/Src/u8x8_display.c ****   
  63:Core/Src/u8g2/Src/u8x8_display.c **** */
  64:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_d_helper_display_init(u8x8_t *u8x8)
  65:Core/Src/u8g2/Src/u8x8_display.c **** {
  58              		.loc 1 65 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		.loc 1 65 1 is_stmt 0 view .LVU8
  63 0000 38B5     		push	{r3, r4, r5, lr}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 3, -16
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 5, -8
  69              		.cfi_offset 14, -4
  70 0002 0446     		mov	r4, r0
  66:Core/Src/u8g2/Src/u8x8_display.c ****       /* 2) apply port directions to the GPIO lines and apply default values for the IO lines*/
  67:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_gpio_Init(u8x8);
  71              		.loc 1 67 7 is_stmt 1 view .LVU9
  72 0004 0023     		movs	r3, #0
  73 0006 1A46     		mov	r2, r3
  74 0008 2821     		movs	r1, #40
  75 000a 4569     		ldr	r5, [r0, #20]
  76 000c A847     		blx	r5
  77              	.LVL2:
  68:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_cad_Init(u8x8);              /* this will also call U8X8_MSG_BYTE_INIT, byte init will N
  78              		.loc 1 68 7 view .LVU10
  79 000e 0023     		movs	r3, #0
  80 0010 1A46     		mov	r2, r3
  81 0012 1421     		movs	r1, #20
  82 0014 2046     		mov	r0, r4
  83 0016 E568     		ldr	r5, [r4, #12]
  84 0018 A847     		blx	r5
  85              	.LVL3:
  69:Core/Src/u8g2/Src/u8x8_display.c **** 
  70:Core/Src/u8g2/Src/u8x8_display.c ****       /* 3) do reset */
  71:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_gpio_SetReset(u8x8, 1);
  86              		.loc 1 71 7 view .LVU11
  87 001a 0122     		movs	r2, #1
  88 001c 4B21     		movs	r1, #75
  89 001e 2046     		mov	r0, r4
  90 0020 FFF7FEFF 		bl	u8x8_gpio_call
  91              	.LVL4:
  72:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
  92              		.loc 1 72 7 view .LVU12
  93 0024 2368     		ldr	r3, [r4]
  94 0026 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
  95 0028 2921     		movs	r1, #41
  96 002a 2046     		mov	r0, r4
  97 002c FFF7FEFF 		bl	u8x8_gpio_call
  98              	.LVL5:
  73:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_gpio_SetReset(u8x8, 0);
  99              		.loc 1 73 7 view .LVU13
 100 0030 0022     		movs	r2, #0
 101 0032 4B21     		movs	r1, #75
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 4


 102 0034 2046     		mov	r0, r4
 103 0036 FFF7FEFF 		bl	u8x8_gpio_call
 104              	.LVL6:
  74:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
 105              		.loc 1 74 7 view .LVU14
 106 003a 2368     		ldr	r3, [r4]
 107 003c 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 108 003e 2921     		movs	r1, #41
 109 0040 2046     		mov	r0, r4
 110 0042 FFF7FEFF 		bl	u8x8_gpio_call
 111              	.LVL7:
  75:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_gpio_SetReset(u8x8, 1);
 112              		.loc 1 75 7 view .LVU15
 113 0046 0122     		movs	r2, #1
 114 0048 4B21     		movs	r1, #75
 115 004a 2046     		mov	r0, r4
 116 004c FFF7FEFF 		bl	u8x8_gpio_call
 117              	.LVL8:
  76:Core/Src/u8g2/Src/u8x8_display.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->post_reset_wait_ms);
 118              		.loc 1 76 7 view .LVU16
 119 0050 2368     		ldr	r3, [r4]
 120 0052 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 121 0054 2921     		movs	r1, #41
 122 0056 2046     		mov	r0, r4
 123 0058 FFF7FEFF 		bl	u8x8_gpio_call
 124              	.LVL9:
  77:Core/Src/u8g2/Src/u8x8_display.c **** }    
 125              		.loc 1 77 1 is_stmt 0 view .LVU17
 126 005c 38BD     		pop	{r3, r4, r5, pc}
 127              		.loc 1 77 1 view .LVU18
 128              		.cfi_endproc
 129              	.LFE1:
 131              		.section	.text.u8x8_DrawTile,"ax",%progbits
 132              		.align	1
 133              		.global	u8x8_DrawTile
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	u8x8_DrawTile:
 139              	.LVL10:
 140              	.LFB2:
  78:Core/Src/u8g2/Src/u8x8_display.c **** 
  79:Core/Src/u8g2/Src/u8x8_display.c **** /*==========================================*/
  80:Core/Src/u8g2/Src/u8x8_display.c **** /* official functions */
  81:Core/Src/u8g2/Src/u8x8_display.c **** 
  82:Core/Src/u8g2/Src/u8x8_display.c **** uint8_t u8x8_DrawTile(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t cnt, uint8_t *tile_ptr)
  83:Core/Src/u8g2/Src/u8x8_display.c **** {
 141              		.loc 1 83 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 4, pretend = 0, frame = 8
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		.loc 1 83 1 is_stmt 0 view .LVU20
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 5


 151 0002 82B0     		sub	sp, sp, #8
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 16
  84:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_tile_t tile;
 154              		.loc 1 84 3 is_stmt 1 view .LVU21
  85:Core/Src/u8g2/Src/u8x8_display.c ****   tile.x_pos = x;
 155              		.loc 1 85 3 view .LVU22
 156              		.loc 1 85 14 is_stmt 0 view .LVU23
 157 0004 8DF80510 		strb	r1, [sp, #5]
  86:Core/Src/u8g2/Src/u8x8_display.c ****   tile.y_pos = y;
 158              		.loc 1 86 3 is_stmt 1 view .LVU24
 159              		.loc 1 86 14 is_stmt 0 view .LVU25
 160 0008 8DF80620 		strb	r2, [sp, #6]
  87:Core/Src/u8g2/Src/u8x8_display.c ****   tile.cnt = cnt;
 161              		.loc 1 87 3 is_stmt 1 view .LVU26
 162              		.loc 1 87 12 is_stmt 0 view .LVU27
 163 000c 8DF80430 		strb	r3, [sp, #4]
  88:Core/Src/u8g2/Src/u8x8_display.c ****   tile.tile_ptr = tile_ptr;
 164              		.loc 1 88 3 is_stmt 1 view .LVU28
 165              		.loc 1 88 17 is_stmt 0 view .LVU29
 166 0010 049B     		ldr	r3, [sp, #16]
 167              	.LVL11:
 168              		.loc 1 88 17 view .LVU30
 169 0012 0093     		str	r3, [sp]
  89:Core/Src/u8g2/Src/u8x8_display.c ****   return u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, 1, (void *)&tile);
 170              		.loc 1 89 3 is_stmt 1 view .LVU31
 171              		.loc 1 89 14 is_stmt 0 view .LVU32
 172 0014 8468     		ldr	r4, [r0, #8]
 173              		.loc 1 89 10 view .LVU33
 174 0016 6B46     		mov	r3, sp
 175 0018 0122     		movs	r2, #1
 176              	.LVL12:
 177              		.loc 1 89 10 view .LVU34
 178 001a 0F21     		movs	r1, #15
 179              	.LVL13:
 180              		.loc 1 89 10 view .LVU35
 181 001c A047     		blx	r4
 182              	.LVL14:
  90:Core/Src/u8g2/Src/u8x8_display.c **** }
 183              		.loc 1 90 1 view .LVU36
 184 001e 02B0     		add	sp, sp, #8
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 8
 187              		@ sp needed
 188 0020 10BD     		pop	{r4, pc}
 189              		.loc 1 90 1 view .LVU37
 190              		.cfi_endproc
 191              	.LFE2:
 193              		.section	.text.u8x8_SetupMemory,"ax",%progbits
 194              		.align	1
 195              		.global	u8x8_SetupMemory
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	u8x8_SetupMemory:
 201              	.LVL15:
 202              	.LFB3:
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 6


  91:Core/Src/u8g2/Src/u8x8_display.c **** 
  92:Core/Src/u8g2/Src/u8x8_display.c **** /* should be implemented as macro */
  93:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_SetupMemory(u8x8_t *u8x8)
  94:Core/Src/u8g2/Src/u8x8_display.c **** {
 203              		.loc 1 94 1 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		.loc 1 94 1 is_stmt 0 view .LVU39
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI4:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
  95:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SETUP_MEMORY, 0, NULL);  
 213              		.loc 1 95 3 is_stmt 1 view .LVU40
 214              		.loc 1 95 7 is_stmt 0 view .LVU41
 215 0002 8468     		ldr	r4, [r0, #8]
 216              		.loc 1 95 3 view .LVU42
 217 0004 0023     		movs	r3, #0
 218 0006 1A46     		mov	r2, r3
 219 0008 0921     		movs	r1, #9
 220 000a A047     		blx	r4
 221              	.LVL16:
  96:Core/Src/u8g2/Src/u8x8_display.c **** }
 222              		.loc 1 96 1 view .LVU43
 223 000c 10BD     		pop	{r4, pc}
 224              		.cfi_endproc
 225              	.LFE3:
 227              		.section	.text.u8x8_InitInterface,"ax",%progbits
 228              		.align	1
 229              		.global	u8x8_InitInterface
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	u8x8_InitInterface:
 235              	.LVL17:
 236              	.LFB4:
  97:Core/Src/u8g2/Src/u8x8_display.c **** 
  98:Core/Src/u8g2/Src/u8x8_display.c **** /*
  99:Core/Src/u8g2/Src/u8x8_display.c ****   This will just init the display interface, compared to InitDisplay, it will not issue a reset and
 100:Core/Src/u8g2/Src/u8x8_display.c ****   Comparison:
 101:Core/Src/u8g2/Src/u8x8_display.c ****   Call                                                  u8x8_InitInterface              u8x8_InitDi
 102:Core/Src/u8g2/Src/u8x8_display.c ****   Init Interface                                                yes                                
 103:Core/Src/u8g2/Src/u8x8_display.c ****   Reset Display                                                 no                                 
 104:Core/Src/u8g2/Src/u8x8_display.c ****   Upload Display Init Code                              no                                      yes
 105:Core/Src/u8g2/Src/u8x8_display.c **** 
 106:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_InitInterface() is an alternative function to u8x8_InitDisplay(). Do not call both.
 107:Core/Src/u8g2/Src/u8x8_display.c ****   
 108:Core/Src/u8g2/Src/u8x8_display.c **** */
 109:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_InitInterface(u8x8_t *u8x8)
 110:Core/Src/u8g2/Src/u8x8_display.c **** {
 237              		.loc 1 110 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 110 1 is_stmt 0 view .LVU45
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 7


 242 0000 38B5     		push	{r3, r4, r5, lr}
 243              	.LCFI5:
 244              		.cfi_def_cfa_offset 16
 245              		.cfi_offset 3, -16
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 5, -8
 248              		.cfi_offset 14, -4
 249 0002 0446     		mov	r4, r0
 111:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_gpio_Init(u8x8);
 250              		.loc 1 111 3 is_stmt 1 view .LVU46
 251 0004 4569     		ldr	r5, [r0, #20]
 252 0006 0023     		movs	r3, #0
 253 0008 1A46     		mov	r2, r3
 254 000a 2821     		movs	r1, #40
 255 000c A847     		blx	r5
 256              	.LVL18:
 112:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_cad_Init(u8x8);              /* this will also call U8X8_MSG_BYTE_INIT, byte init will NOT c
 257              		.loc 1 112 3 view .LVU47
 258 000e E568     		ldr	r5, [r4, #12]
 259 0010 0023     		movs	r3, #0
 260 0012 1A46     		mov	r2, r3
 261 0014 1421     		movs	r1, #20
 262 0016 2046     		mov	r0, r4
 263 0018 A847     		blx	r5
 264              	.LVL19:
 113:Core/Src/u8g2/Src/u8x8_display.c **** }
 265              		.loc 1 113 1 is_stmt 0 view .LVU48
 266 001a 38BD     		pop	{r3, r4, r5, pc}
 267              		.loc 1 113 1 view .LVU49
 268              		.cfi_endproc
 269              	.LFE4:
 271              		.section	.text.u8x8_InitDisplay,"ax",%progbits
 272              		.align	1
 273              		.global	u8x8_InitDisplay
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	u8x8_InitDisplay:
 279              	.LVL20:
 280              	.LFB5:
 114:Core/Src/u8g2/Src/u8x8_display.c **** 
 115:Core/Src/u8g2/Src/u8x8_display.c **** /*
 116:Core/Src/u8g2/Src/u8x8_display.c ****   This will sent the display init message to the display.
 117:Core/Src/u8g2/Src/u8x8_display.c ****   The display itself will then call u8x8_d_helper_display_init() from above. This includes:
 118:Core/Src/u8g2/Src/u8x8_display.c ****     GPIO Init (set port directions)
 119:Core/Src/u8g2/Src/u8x8_display.c ****     BYTE init (part of CAD init: which may set some levels)
 120:Core/Src/u8g2/Src/u8x8_display.c ****     CAD init (which will set things like I2C default address)
 121:Core/Src/u8g2/Src/u8x8_display.c ****     Issue a reset to the display: This will usually turn off the display
 122:Core/Src/u8g2/Src/u8x8_display.c ****   Additonally each display will set the init code to the display, which will also turn of the displ
 123:Core/Src/u8g2/Src/u8x8_display.c **** 
 124:Core/Src/u8g2/Src/u8x8_display.c ****   Actually this procedure should be better called InitInterfaceAndDisplay, because it actually does
 125:Core/Src/u8g2/Src/u8x8_display.c ****   (actually u8x8_InitInterface() is not called directly but only u8x8_gpio_Init and u8x8_cad_Init w
 126:Core/Src/u8g2/Src/u8x8_display.c ****   in turn is called by u8x8_InitInterface())
 127:Core/Src/u8g2/Src/u8x8_display.c **** 
 128:Core/Src/u8g2/Src/u8x8_display.c **** 
 129:Core/Src/u8g2/Src/u8x8_display.c ****   InitDisplay is called by the Arduino begin() function 
 130:Core/Src/u8g2/Src/u8x8_display.c **** 
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 8


 131:Core/Src/u8g2/Src/u8x8_display.c ****   In some cases it is not required to init the display (for example if the display is already runni
 132:Core/Src/u8g2/Src/u8x8_display.c ****   Then InitDisplay can be skipped, but u8x8_InitInterface()  (== u8x8_gpio_Init() and u8x8_cad_Init
 133:Core/Src/u8g2/Src/u8x8_display.c **** 
 134:Core/Src/u8g2/Src/u8x8_display.c **** */
 135:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_InitDisplay(u8x8_t *u8x8)
 136:Core/Src/u8g2/Src/u8x8_display.c **** {
 281              		.loc 1 136 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 136 1 is_stmt 0 view .LVU51
 286 0000 10B5     		push	{r4, lr}
 287              	.LCFI6:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 4, -8
 290              		.cfi_offset 14, -4
 137:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_INIT, 0, NULL);       /* this will call u8x8_d_helper_dis
 291              		.loc 1 137 3 is_stmt 1 view .LVU52
 292              		.loc 1 137 7 is_stmt 0 view .LVU53
 293 0002 8468     		ldr	r4, [r0, #8]
 294              		.loc 1 137 3 view .LVU54
 295 0004 0023     		movs	r3, #0
 296 0006 1A46     		mov	r2, r3
 297 0008 0A21     		movs	r1, #10
 298 000a A047     		blx	r4
 299              	.LVL21:
 138:Core/Src/u8g2/Src/u8x8_display.c ****   /* u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, 0, NULL);  */ /* It would make sense to
 139:Core/Src/u8g2/Src/u8x8_display.c **** }
 300              		.loc 1 139 1 view .LVU55
 301 000c 10BD     		pop	{r4, pc}
 302              		.cfi_endproc
 303              	.LFE5:
 305              		.section	.text.u8x8_SetPowerSave,"ax",%progbits
 306              		.align	1
 307              		.global	u8x8_SetPowerSave
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	u8x8_SetPowerSave:
 313              	.LVL22:
 314              	.LFB6:
 140:Core/Src/u8g2/Src/u8x8_display.c **** 
 141:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_SetPowerSave(u8x8_t *u8x8, uint8_t is_enable)
 142:Core/Src/u8g2/Src/u8x8_display.c **** {
 315              		.loc 1 142 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		.loc 1 142 1 is_stmt 0 view .LVU57
 320 0000 10B5     		push	{r4, lr}
 321              	.LCFI7:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 325 0002 0A46     		mov	r2, r1
 143:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_POWER_SAVE, is_enable, NULL);  
 326              		.loc 1 143 3 is_stmt 1 view .LVU58
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 9


 327              		.loc 1 143 7 is_stmt 0 view .LVU59
 328 0004 8468     		ldr	r4, [r0, #8]
 329              		.loc 1 143 3 view .LVU60
 330 0006 0023     		movs	r3, #0
 331 0008 0B21     		movs	r1, #11
 332              	.LVL23:
 333              		.loc 1 143 3 view .LVU61
 334 000a A047     		blx	r4
 335              	.LVL24:
 144:Core/Src/u8g2/Src/u8x8_display.c **** }
 336              		.loc 1 144 1 view .LVU62
 337 000c 10BD     		pop	{r4, pc}
 338              		.cfi_endproc
 339              	.LFE6:
 341              		.section	.text.u8x8_SetFlipMode,"ax",%progbits
 342              		.align	1
 343              		.global	u8x8_SetFlipMode
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	u8x8_SetFlipMode:
 349              	.LVL25:
 350              	.LFB7:
 145:Core/Src/u8g2/Src/u8x8_display.c **** 
 146:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_SetFlipMode(u8x8_t *u8x8, uint8_t mode)
 147:Core/Src/u8g2/Src/u8x8_display.c **** {
 351              		.loc 1 147 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		.loc 1 147 1 is_stmt 0 view .LVU64
 356 0000 10B5     		push	{r4, lr}
 357              	.LCFI8:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 4, -8
 360              		.cfi_offset 14, -4
 361 0002 0A46     		mov	r2, r1
 148:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, mode, NULL);  
 362              		.loc 1 148 3 is_stmt 1 view .LVU65
 363              		.loc 1 148 7 is_stmt 0 view .LVU66
 364 0004 8468     		ldr	r4, [r0, #8]
 365              		.loc 1 148 3 view .LVU67
 366 0006 0023     		movs	r3, #0
 367 0008 0D21     		movs	r1, #13
 368              	.LVL26:
 369              		.loc 1 148 3 view .LVU68
 370 000a A047     		blx	r4
 371              	.LVL27:
 149:Core/Src/u8g2/Src/u8x8_display.c **** }
 372              		.loc 1 149 1 view .LVU69
 373 000c 10BD     		pop	{r4, pc}
 374              		.cfi_endproc
 375              	.LFE7:
 377              		.section	.text.u8x8_SetContrast,"ax",%progbits
 378              		.align	1
 379              		.global	u8x8_SetContrast
 380              		.syntax unified
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 10


 381              		.thumb
 382              		.thumb_func
 384              	u8x8_SetContrast:
 385              	.LVL28:
 386              	.LFB8:
 150:Core/Src/u8g2/Src/u8x8_display.c **** 
 151:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_SetContrast(u8x8_t *u8x8, uint8_t value)
 152:Core/Src/u8g2/Src/u8x8_display.c **** {
 387              		.loc 1 152 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		.loc 1 152 1 is_stmt 0 view .LVU71
 392 0000 10B5     		push	{r4, lr}
 393              	.LCFI9:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 4, -8
 396              		.cfi_offset 14, -4
 397 0002 0A46     		mov	r2, r1
 153:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
 398              		.loc 1 153 3 is_stmt 1 view .LVU72
 399              		.loc 1 153 7 is_stmt 0 view .LVU73
 400 0004 8468     		ldr	r4, [r0, #8]
 401              		.loc 1 153 3 view .LVU74
 402 0006 0023     		movs	r3, #0
 403 0008 0E21     		movs	r1, #14
 404              	.LVL29:
 405              		.loc 1 153 3 view .LVU75
 406 000a A047     		blx	r4
 407              	.LVL30:
 154:Core/Src/u8g2/Src/u8x8_display.c **** }
 408              		.loc 1 154 1 view .LVU76
 409 000c 10BD     		pop	{r4, pc}
 410              		.cfi_endproc
 411              	.LFE8:
 413              		.section	.text.u8x8_RefreshDisplay,"ax",%progbits
 414              		.align	1
 415              		.global	u8x8_RefreshDisplay
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	u8x8_RefreshDisplay:
 421              	.LVL31:
 422              	.LFB9:
 155:Core/Src/u8g2/Src/u8x8_display.c **** 
 156:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_RefreshDisplay(u8x8_t *u8x8)
 157:Core/Src/u8g2/Src/u8x8_display.c **** {
 423              		.loc 1 157 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		.loc 1 157 1 is_stmt 0 view .LVU78
 428 0000 10B5     		push	{r4, lr}
 429              	.LCFI10:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 4, -8
 432              		.cfi_offset 14, -4
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 11


 158:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
 433              		.loc 1 158 3 is_stmt 1 view .LVU79
 434              		.loc 1 158 7 is_stmt 0 view .LVU80
 435 0002 8468     		ldr	r4, [r0, #8]
 436              		.loc 1 158 3 view .LVU81
 437 0004 0023     		movs	r3, #0
 438 0006 1A46     		mov	r2, r3
 439 0008 1021     		movs	r1, #16
 440 000a A047     		blx	r4
 441              	.LVL32:
 159:Core/Src/u8g2/Src/u8x8_display.c **** }
 442              		.loc 1 159 1 view .LVU82
 443 000c 10BD     		pop	{r4, pc}
 444              		.cfi_endproc
 445              	.LFE9:
 447              		.section	.text.u8x8_ClearDisplayWithTile,"ax",%progbits
 448              		.align	1
 449              		.global	u8x8_ClearDisplayWithTile
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	u8x8_ClearDisplayWithTile:
 455              	.LVL33:
 456              	.LFB10:
 160:Core/Src/u8g2/Src/u8x8_display.c **** 
 161:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_ClearDisplayWithTile(u8x8_t *u8x8, const uint8_t *buf)
 162:Core/Src/u8g2/Src/u8x8_display.c **** {
 457              		.loc 1 162 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		.loc 1 162 1 is_stmt 0 view .LVU84
 462 0000 70B5     		push	{r4, r5, r6, lr}
 463              	.LCFI11:
 464              		.cfi_def_cfa_offset 16
 465              		.cfi_offset 4, -16
 466              		.cfi_offset 5, -12
 467              		.cfi_offset 6, -8
 468              		.cfi_offset 14, -4
 469 0002 82B0     		sub	sp, sp, #8
 470              	.LCFI12:
 471              		.cfi_def_cfa_offset 24
 472 0004 0446     		mov	r4, r0
 163:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_tile_t tile;
 473              		.loc 1 163 3 is_stmt 1 view .LVU85
 164:Core/Src/u8g2/Src/u8x8_display.c ****   uint8_t h;
 474              		.loc 1 164 3 view .LVU86
 165:Core/Src/u8g2/Src/u8x8_display.c **** 
 166:Core/Src/u8g2/Src/u8x8_display.c ****   tile.x_pos = 0;
 475              		.loc 1 166 3 view .LVU87
 476              		.loc 1 166 14 is_stmt 0 view .LVU88
 477 0006 0023     		movs	r3, #0
 478 0008 8DF80530 		strb	r3, [sp, #5]
 167:Core/Src/u8g2/Src/u8x8_display.c ****   tile.cnt = 1;
 479              		.loc 1 167 3 is_stmt 1 view .LVU89
 480              		.loc 1 167 12 is_stmt 0 view .LVU90
 481 000c 0122     		movs	r2, #1
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 12


 482 000e 8DF80420 		strb	r2, [sp, #4]
 168:Core/Src/u8g2/Src/u8x8_display.c ****   tile.tile_ptr = (uint8_t *)buf;		/* tile_ptr should be const, but isn't */
 483              		.loc 1 168 3 is_stmt 1 view .LVU91
 484              		.loc 1 168 17 is_stmt 0 view .LVU92
 485 0012 0091     		str	r1, [sp]
 169:Core/Src/u8g2/Src/u8x8_display.c ****   
 170:Core/Src/u8g2/Src/u8x8_display.c ****   h = u8x8->display_info->tile_height;
 486              		.loc 1 170 3 is_stmt 1 view .LVU93
 487              		.loc 1 170 11 is_stmt 0 view .LVU94
 488 0014 0268     		ldr	r2, [r0]
 489              		.loc 1 170 5 view .LVU95
 490 0016 557C     		ldrb	r5, [r2, #17]	@ zero_extendqisi2
 491              	.LVL34:
 171:Core/Src/u8g2/Src/u8x8_display.c ****   tile.y_pos = 0;
 492              		.loc 1 171 3 is_stmt 1 view .LVU96
 493              		.loc 1 171 14 is_stmt 0 view .LVU97
 494 0018 8DF80630 		strb	r3, [sp, #6]
 495              	.LVL35:
 496              	.L21:
 172:Core/Src/u8g2/Src/u8x8_display.c ****   do
 497              		.loc 1 172 3 is_stmt 1 discriminator 1 view .LVU98
 173:Core/Src/u8g2/Src/u8x8_display.c ****   {
 174:Core/Src/u8g2/Src/u8x8_display.c ****     u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, u8x8->display_info->tile_width, (void *)&til
 498              		.loc 1 174 5 discriminator 1 view .LVU99
 499              		.loc 1 174 60 is_stmt 0 discriminator 1 view .LVU100
 500 001c 2268     		ldr	r2, [r4]
 501              		.loc 1 174 5 discriminator 1 view .LVU101
 502 001e 6B46     		mov	r3, sp
 503 0020 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 504 0022 0F21     		movs	r1, #15
 505 0024 2046     		mov	r0, r4
 506 0026 A668     		ldr	r6, [r4, #8]
 507 0028 B047     		blx	r6
 508              	.LVL36:
 175:Core/Src/u8g2/Src/u8x8_display.c ****     tile.y_pos++;
 509              		.loc 1 175 5 is_stmt 1 discriminator 1 view .LVU102
 510              		.loc 1 175 9 is_stmt 0 discriminator 1 view .LVU103
 511 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 512              		.loc 1 175 15 discriminator 1 view .LVU104
 513 002e 0133     		adds	r3, r3, #1
 514 0030 DBB2     		uxtb	r3, r3
 515 0032 8DF80630 		strb	r3, [sp, #6]
 176:Core/Src/u8g2/Src/u8x8_display.c ****   } while( tile.y_pos < h );
 516              		.loc 1 176 10 is_stmt 1 discriminator 1 view .LVU105
 517              		.loc 1 176 3 is_stmt 0 discriminator 1 view .LVU106
 518 0036 AB42     		cmp	r3, r5
 519 0038 F0D3     		bcc	.L21
 177:Core/Src/u8g2/Src/u8x8_display.c **** }
 520              		.loc 1 177 1 view .LVU107
 521 003a 02B0     		add	sp, sp, #8
 522              	.LCFI13:
 523              		.cfi_def_cfa_offset 16
 524              		@ sp needed
 525 003c 70BD     		pop	{r4, r5, r6, pc}
 526              		.loc 1 177 1 view .LVU108
 527              		.cfi_endproc
 528              	.LFE10:
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 13


 530              		.section	.text.u8x8_ClearDisplay,"ax",%progbits
 531              		.align	1
 532              		.global	u8x8_ClearDisplay
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 537              	u8x8_ClearDisplay:
 538              	.LVL37:
 539              	.LFB11:
 178:Core/Src/u8g2/Src/u8x8_display.c **** 
 179:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_ClearDisplay(u8x8_t *u8x8)
 180:Core/Src/u8g2/Src/u8x8_display.c **** {
 540              		.loc 1 180 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		.loc 1 180 1 is_stmt 0 view .LVU110
 545 0000 00B5     		push	{lr}
 546              	.LCFI14:
 547              		.cfi_def_cfa_offset 4
 548              		.cfi_offset 14, -4
 549 0002 83B0     		sub	sp, sp, #12
 550              	.LCFI15:
 551              		.cfi_def_cfa_offset 16
 552 0004 8446     		mov	ip, r0
 181:Core/Src/u8g2/Src/u8x8_display.c ****   uint8_t buf[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 553              		.loc 1 181 3 is_stmt 1 view .LVU111
 554              		.loc 1 181 11 is_stmt 0 view .LVU112
 555 0006 064A     		ldr	r2, .L25
 556 0008 6B46     		mov	r3, sp
 557 000a 92E80300 		ldm	r2, {r0, r1}
 558              	.LVL38:
 559              		.loc 1 181 11 view .LVU113
 560 000e 83E80300 		stm	r3, {r0, r1}
 182:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_ClearDisplayWithTile(u8x8, buf);
 561              		.loc 1 182 3 is_stmt 1 view .LVU114
 562 0012 1946     		mov	r1, r3
 563 0014 6046     		mov	r0, ip
 564 0016 FFF7FEFF 		bl	u8x8_ClearDisplayWithTile
 565              	.LVL39:
 183:Core/Src/u8g2/Src/u8x8_display.c **** }
 566              		.loc 1 183 1 is_stmt 0 view .LVU115
 567 001a 03B0     		add	sp, sp, #12
 568              	.LCFI16:
 569              		.cfi_def_cfa_offset 4
 570              		@ sp needed
 571 001c 5DF804FB 		ldr	pc, [sp], #4
 572              	.L26:
 573              		.align	2
 574              	.L25:
 575 0020 00000000 		.word	.LANCHOR0
 576              		.cfi_endproc
 577              	.LFE11:
 579              		.section	.rodata.u8x8_FillDisplay.str1.4,"aMS",%progbits,1
 580              		.align	2
 581              	.LC1:
 582 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\377\000"
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 14


 582      FFFFFFFF 
 582      00
 583              		.section	.text.u8x8_FillDisplay,"ax",%progbits
 584              		.align	1
 585              		.global	u8x8_FillDisplay
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 590              	u8x8_FillDisplay:
 591              	.LVL40:
 592              	.LFB12:
 184:Core/Src/u8g2/Src/u8x8_display.c **** 
 185:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_FillDisplay(u8x8_t *u8x8)
 186:Core/Src/u8g2/Src/u8x8_display.c **** {
 593              		.loc 1 186 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 8
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		.loc 1 186 1 is_stmt 0 view .LVU117
 598 0000 00B5     		push	{lr}
 599              	.LCFI17:
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 14, -4
 602 0002 83B0     		sub	sp, sp, #12
 603              	.LCFI18:
 604              		.cfi_def_cfa_offset 16
 605 0004 8446     		mov	ip, r0
 187:Core/Src/u8g2/Src/u8x8_display.c ****   uint8_t buf[8] = { 255, 255, 255, 255, 255, 255, 255, 255 };
 606              		.loc 1 187 3 is_stmt 1 view .LVU118
 607              		.loc 1 187 11 is_stmt 0 view .LVU119
 608 0006 064A     		ldr	r2, .L29
 609 0008 6B46     		mov	r3, sp
 610 000a 92E80300 		ldm	r2, {r0, r1}
 611              	.LVL41:
 612              		.loc 1 187 11 view .LVU120
 613 000e 83E80300 		stm	r3, {r0, r1}
 188:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_ClearDisplayWithTile(u8x8, buf);
 614              		.loc 1 188 3 is_stmt 1 view .LVU121
 615 0012 1946     		mov	r1, r3
 616 0014 6046     		mov	r0, ip
 617 0016 FFF7FEFF 		bl	u8x8_ClearDisplayWithTile
 618              	.LVL42:
 189:Core/Src/u8g2/Src/u8x8_display.c **** }
 619              		.loc 1 189 1 is_stmt 0 view .LVU122
 620 001a 03B0     		add	sp, sp, #12
 621              	.LCFI19:
 622              		.cfi_def_cfa_offset 4
 623              		@ sp needed
 624 001c 5DF804FB 		ldr	pc, [sp], #4
 625              	.L30:
 626              		.align	2
 627              	.L29:
 628 0020 00000000 		.word	.LC1
 629              		.cfi_endproc
 630              	.LFE12:
 632              		.section	.text.u8x8_ClearLine,"ax",%progbits
 633              		.align	1
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 15


 634              		.global	u8x8_ClearLine
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	u8x8_ClearLine:
 640              	.LVL43:
 641              	.LFB13:
 190:Core/Src/u8g2/Src/u8x8_display.c **** 
 191:Core/Src/u8g2/Src/u8x8_display.c **** void u8x8_ClearLine(u8x8_t *u8x8, uint8_t line)
 192:Core/Src/u8g2/Src/u8x8_display.c **** {
 642              		.loc 1 192 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 16
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		.loc 1 192 1 is_stmt 0 view .LVU124
 647 0000 10B5     		push	{r4, lr}
 648              	.LCFI20:
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 4, -8
 651              		.cfi_offset 14, -4
 652 0002 84B0     		sub	sp, sp, #16
 653              	.LCFI21:
 654              		.cfi_def_cfa_offset 24
 655 0004 8446     		mov	ip, r0
 656 0006 0B46     		mov	r3, r1
 193:Core/Src/u8g2/Src/u8x8_display.c ****   uint8_t buf[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 657              		.loc 1 193 3 is_stmt 1 view .LVU125
 658              		.loc 1 193 11 is_stmt 0 view .LVU126
 659 0008 0F4A     		ldr	r2, .L34
 660 000a 92E80300 		ldm	r2, {r0, r1}
 661              	.LVL44:
 662              		.loc 1 193 11 view .LVU127
 663 000e 04AA     		add	r2, sp, #16
 664 0010 02E90300 		stmdb	r2, {r0, r1}
 194:Core/Src/u8g2/Src/u8x8_display.c ****   u8x8_tile_t tile;
 665              		.loc 1 194 3 is_stmt 1 view .LVU128
 195:Core/Src/u8g2/Src/u8x8_display.c ****   if ( line < u8x8->display_info->tile_height )
 666              		.loc 1 195 3 view .LVU129
 667              		.loc 1 195 19 is_stmt 0 view .LVU130
 668 0014 DCF80020 		ldr	r2, [ip]
 669              		.loc 1 195 33 view .LVU131
 670 0018 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 671              		.loc 1 195 6 view .LVU132
 672 001a 9A42     		cmp	r2, r3
 673 001c 12D9     		bls	.L31
 196:Core/Src/u8g2/Src/u8x8_display.c ****   {
 197:Core/Src/u8g2/Src/u8x8_display.c ****     tile.x_pos = 0;
 674              		.loc 1 197 5 is_stmt 1 view .LVU133
 675              		.loc 1 197 16 is_stmt 0 view .LVU134
 676 001e 0022     		movs	r2, #0
 677 0020 8DF80520 		strb	r2, [sp, #5]
 198:Core/Src/u8g2/Src/u8x8_display.c ****     tile.y_pos = line;
 678              		.loc 1 198 5 is_stmt 1 view .LVU135
 679              		.loc 1 198 16 is_stmt 0 view .LVU136
 680 0024 8DF80630 		strb	r3, [sp, #6]
 199:Core/Src/u8g2/Src/u8x8_display.c ****     tile.cnt = 1;
 681              		.loc 1 199 5 is_stmt 1 view .LVU137
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 16


 682              		.loc 1 199 14 is_stmt 0 view .LVU138
 683 0028 0123     		movs	r3, #1
 684 002a 8DF80430 		strb	r3, [sp, #4]
 200:Core/Src/u8g2/Src/u8x8_display.c ****     tile.tile_ptr = (uint8_t *)buf;		/* tile_ptr should be const, but isn't */
 685              		.loc 1 200 5 is_stmt 1 view .LVU139
 686              		.loc 1 200 19 is_stmt 0 view .LVU140
 687 002e 02AB     		add	r3, sp, #8
 688 0030 0093     		str	r3, [sp]
 201:Core/Src/u8g2/Src/u8x8_display.c ****     u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, u8x8->display_info->tile_width, (void *)&til
 689              		.loc 1 201 5 is_stmt 1 view .LVU141
 690              		.loc 1 201 9 is_stmt 0 view .LVU142
 691 0032 DCF80840 		ldr	r4, [ip, #8]
 692              		.loc 1 201 60 view .LVU143
 693 0036 DCF80020 		ldr	r2, [ip]
 694              		.loc 1 201 5 view .LVU144
 695 003a 6B46     		mov	r3, sp
 696 003c 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 697 003e 0F21     		movs	r1, #15
 698 0040 6046     		mov	r0, ip
 699 0042 A047     		blx	r4
 700              	.LVL45:
 701              	.L31:
 202:Core/Src/u8g2/Src/u8x8_display.c ****   }  
 203:Core/Src/u8g2/Src/u8x8_display.c **** }...
 702              		.loc 1 203 1 view .LVU145
 703 0044 04B0     		add	sp, sp, #16
 704              	.LCFI22:
 705              		.cfi_def_cfa_offset 8
 706              		@ sp needed
 707 0046 10BD     		pop	{r4, pc}
 708              	.L35:
 709              		.align	2
 710              	.L34:
 711 0048 00000000 		.word	.LANCHOR0
 712              		.cfi_endproc
 713              	.LFE13:
 715              		.section	.rodata
 716              		.align	2
 717              		.set	.LANCHOR0,. + 0
 718              	.LC0:
 719 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 719      00000000 
 720              		.text
 721              	.Letext0:
 722              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 723              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 724              		.file 4 "Core/Src/u8g2/Inc/u8x8.h"
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_display.c
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:20     .text.u8x8_d_helper_display_setup_memory:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:26     .text.u8x8_d_helper_display_setup_memory:00000000 u8x8_d_helper_display_setup_memory
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:49     .text.u8x8_d_helper_display_init:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:55     .text.u8x8_d_helper_display_init:00000000 u8x8_d_helper_display_init
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:132    .text.u8x8_DrawTile:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:138    .text.u8x8_DrawTile:00000000 u8x8_DrawTile
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:194    .text.u8x8_SetupMemory:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:200    .text.u8x8_SetupMemory:00000000 u8x8_SetupMemory
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:228    .text.u8x8_InitInterface:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:234    .text.u8x8_InitInterface:00000000 u8x8_InitInterface
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:272    .text.u8x8_InitDisplay:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:278    .text.u8x8_InitDisplay:00000000 u8x8_InitDisplay
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:306    .text.u8x8_SetPowerSave:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:312    .text.u8x8_SetPowerSave:00000000 u8x8_SetPowerSave
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:342    .text.u8x8_SetFlipMode:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:348    .text.u8x8_SetFlipMode:00000000 u8x8_SetFlipMode
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:378    .text.u8x8_SetContrast:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:384    .text.u8x8_SetContrast:00000000 u8x8_SetContrast
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:414    .text.u8x8_RefreshDisplay:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:420    .text.u8x8_RefreshDisplay:00000000 u8x8_RefreshDisplay
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:448    .text.u8x8_ClearDisplayWithTile:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:454    .text.u8x8_ClearDisplayWithTile:00000000 u8x8_ClearDisplayWithTile
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:531    .text.u8x8_ClearDisplay:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:537    .text.u8x8_ClearDisplay:00000000 u8x8_ClearDisplay
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:575    .text.u8x8_ClearDisplay:00000020 $d
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:580    .rodata.u8x8_FillDisplay.str1.4:00000000 $d
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:584    .text.u8x8_FillDisplay:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:590    .text.u8x8_FillDisplay:00000000 u8x8_FillDisplay
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:628    .text.u8x8_FillDisplay:00000020 $d
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:633    .text.u8x8_ClearLine:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:639    .text.u8x8_ClearLine:00000000 u8x8_ClearLine
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:711    .text.u8x8_ClearLine:00000048 $d
C:\Users\MOROSH~1\AppData\Local\Temp\ccO9iyha.s:716    .rodata:00000000 $d

UNDEFINED SYMBOLS
u8x8_gpio_call
