ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"u8g2_hvline.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.u8g2_clip_intersection2,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	u8g2_clip_intersection2:
  26              	.LVL0:
  27              	.LFB0:
  28              		.file 1 "Core/Src/u8g2/Src/u8g2_hvline.c"
   1:Core/Src/u8g2/Src/u8g2_hvline.c **** /*
   2:Core/Src/u8g2/Src/u8g2_hvline.c **** 
   3:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2_hvline.c
   4:Core/Src/u8g2/Src/u8g2_hvline.c **** 
   5:Core/Src/u8g2/Src/u8g2_hvline.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:Core/Src/u8g2/Src/u8g2_hvline.c **** 
   7:Core/Src/u8g2/Src/u8g2_hvline.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:Core/Src/u8g2/Src/u8g2_hvline.c ****   All rights reserved.
   9:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  10:Core/Src/u8g2/Src/u8g2_hvline.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:Core/Src/u8g2/Src/u8g2_hvline.c ****   are permitted provided that the following conditions are met:
  12:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  13:Core/Src/u8g2/Src/u8g2_hvline.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:Core/Src/u8g2/Src/u8g2_hvline.c ****     of conditions and the following disclaimer.
  15:Core/Src/u8g2/Src/u8g2_hvline.c ****     
  16:Core/Src/u8g2/Src/u8g2_hvline.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:Core/Src/u8g2/Src/u8g2_hvline.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:Core/Src/u8g2/Src/u8g2_hvline.c ****     materials provided with the distribution.
  19:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  20:Core/Src/u8g2/Src/u8g2_hvline.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:Core/Src/u8g2/Src/u8g2_hvline.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:Core/Src/u8g2/Src/u8g2_hvline.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:Core/Src/u8g2/Src/u8g2_hvline.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:Core/Src/u8g2/Src/u8g2_hvline.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:Core/Src/u8g2/Src/u8g2_hvline.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:Core/Src/u8g2/Src/u8g2_hvline.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:Core/Src/u8g2/Src/u8g2_hvline.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:Core/Src/u8g2/Src/u8g2_hvline.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:Core/Src/u8g2/Src/u8g2_hvline.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:Core/Src/u8g2/Src/u8g2_hvline.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 2


  31:Core/Src/u8g2/Src/u8g2_hvline.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:Core/Src/u8g2/Src/u8g2_hvline.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  34:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  35:Core/Src/u8g2/Src/u8g2_hvline.c ****   Calltree
  36:Core/Src/u8g2/Src/u8g2_hvline.c ****   
  37:Core/Src/u8g2/Src/u8g2_hvline.c ****     void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
  38:Core/Src/u8g2/Src/u8g2_hvline.c ****     u8g2->cb->draw_l90
  39:Core/Src/u8g2/Src/u8g2_hvline.c ****     u8g2_draw_hv_line_2dir
  40:Core/Src/u8g2/Src/u8g2_hvline.c ****     u8g2->ll_hvline(u8g2, x, y, len, dir);
  41:Core/Src/u8g2/Src/u8g2_hvline.c ****     
  42:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  43:Core/Src/u8g2/Src/u8g2_hvline.c **** */
  44:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  45:Core/Src/u8g2/Src/u8g2_hvline.c **** #include "u8g2.h"
  46:Core/Src/u8g2/Src/u8g2_hvline.c **** #include <assert.h>
  47:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  48:Core/Src/u8g2/Src/u8g2_hvline.c **** /*==========================================================*/
  49:Core/Src/u8g2/Src/u8g2_hvline.c **** /* intersection procedure */
  50:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  51:Core/Src/u8g2/Src/u8g2_hvline.c **** /*
  52:Core/Src/u8g2/Src/u8g2_hvline.c ****   Description:
  53:Core/Src/u8g2/Src/u8g2_hvline.c ****     clip range from pos a (included) with line len (a+len excluded) agains c (included) to d (exclu
  54:Core/Src/u8g2/Src/u8g2_hvline.c ****   Assumptions:
  55:Core/Src/u8g2/Src/u8g2_hvline.c ****     len > 0
  56:Core/Src/u8g2/Src/u8g2_hvline.c ****     c <= d		(this is not checked)
  57:Core/Src/u8g2/Src/u8g2_hvline.c ****   will return 0 if there is no intersection and if a > b
  58:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  59:Core/Src/u8g2/Src/u8g2_hvline.c **** */
  60:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  61:Core/Src/u8g2/Src/u8g2_hvline.c **** static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_
  62:Core/Src/u8g2/Src/u8g2_hvline.c **** {
  29              		.loc 1 62 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 62 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  63:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2_uint_t a = *ap;
  38              		.loc 1 63 3 is_stmt 1 view .LVU2
  39              		.loc 1 63 15 is_stmt 0 view .LVU3
  40 0002 B0F800E0 		ldrh	lr, [r0]
  41              	.LVL1:
  64:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2_uint_t b;
  42              		.loc 1 64 3 is_stmt 1 view .LVU4
  65:Core/Src/u8g2/Src/u8g2_hvline.c ****   b  = a;
  43              		.loc 1 65 3 view .LVU5
  66:Core/Src/u8g2/Src/u8g2_hvline.c ****   b += *len;
  44              		.loc 1 66 3 view .LVU6
  45              		.loc 1 66 8 is_stmt 0 view .LVU7
  46 0006 B1F800C0 		ldrh	ip, [r1]
  47              		.loc 1 66 5 view .LVU8
  48 000a F444     		add	ip, ip, lr
  49 000c 1FFA8CFC 		uxth	ip, ip
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 3


  50              	.LVL2:
  67:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  68:Core/Src/u8g2/Src/u8g2_hvline.c ****   /*
  69:Core/Src/u8g2/Src/u8g2_hvline.c ****     Description:
  70:Core/Src/u8g2/Src/u8g2_hvline.c ****       clip range from a (included) to b (excluded) agains c (included) to d (excluded)
  71:Core/Src/u8g2/Src/u8g2_hvline.c ****     Assumptions:
  72:Core/Src/u8g2/Src/u8g2_hvline.c ****       a <= b		(violation is checked and handled correctly)
  73:Core/Src/u8g2/Src/u8g2_hvline.c ****       c <= d		(this is not checked)
  74:Core/Src/u8g2/Src/u8g2_hvline.c ****     will return 0 if there is no intersection and if a > b
  75:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  76:Core/Src/u8g2/Src/u8g2_hvline.c ****     optimized clipping: c is set to 0 --> 27 Oct 2018: again removed the c==0 assumption
  77:Core/Src/u8g2/Src/u8g2_hvline.c ****     
  78:Core/Src/u8g2/Src/u8g2_hvline.c ****     replaced by uint8_t u8g2_clip_intersection2
  79:Core/Src/u8g2/Src/u8g2_hvline.c ****   */
  80:Core/Src/u8g2/Src/u8g2_hvline.c **** 
  81:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* handle the a>b case correctly. If code and time is critical, this could */
  82:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* be removed completly (be aware about memory curruption for wrong */
  83:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  84:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* arguments) */  
  85:Core/Src/u8g2/Src/u8g2_hvline.c ****   
  86:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* removing the following if clause completly may lead to memory corruption of a>b */
  87:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( a > b )
  51              		.loc 1 87 3 is_stmt 1 view .LVU9
  52              		.loc 1 87 6 is_stmt 0 view .LVU10
  53 0010 E645     		cmp	lr, ip
  54 0012 05D9     		bls	.L2
  88:Core/Src/u8g2/Src/u8g2_hvline.c ****   {    
  89:Core/Src/u8g2/Src/u8g2_hvline.c ****     /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
  90:Core/Src/u8g2/Src/u8g2_hvline.c ****     if ( a < d )
  55              		.loc 1 90 5 is_stmt 1 view .LVU11
  56              		.loc 1 90 8 is_stmt 0 view .LVU12
  57 0014 9E45     		cmp	lr, r3
  58 0016 13D2     		bcs	.L6
  91:Core/Src/u8g2/Src/u8g2_hvline.c ****     {
  92:Core/Src/u8g2/Src/u8g2_hvline.c ****       b = d;
  59              		.loc 1 92 7 is_stmt 1 view .LVU13
  60              	.LVL3:
  93:Core/Src/u8g2/Src/u8g2_hvline.c ****       b--;
  61              		.loc 1 93 7 view .LVU14
  62              		.loc 1 93 8 is_stmt 0 view .LVU15
  63 0018 03F1FF3C 		add	ip, r3, #-1
  64 001c 1FFA8CFC 		uxth	ip, ip
  65              	.LVL4:
  66              	.L2:
  94:Core/Src/u8g2/Src/u8g2_hvline.c ****     }
  95:Core/Src/u8g2/Src/u8g2_hvline.c ****     else
  96:Core/Src/u8g2/Src/u8g2_hvline.c ****     {
  97:Core/Src/u8g2/Src/u8g2_hvline.c ****       a = c;
  98:Core/Src/u8g2/Src/u8g2_hvline.c ****     }
  99:Core/Src/u8g2/Src/u8g2_hvline.c ****   }
 100:Core/Src/u8g2/Src/u8g2_hvline.c ****   
 101:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* from now on, the asumption a <= b is ok */
 102:Core/Src/u8g2/Src/u8g2_hvline.c ****   
 103:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( a >= d )
  67              		.loc 1 103 3 is_stmt 1 view .LVU16
  68              		.loc 1 103 6 is_stmt 0 view .LVU17
  69 0020 9E45     		cmp	lr, r3
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 4


  70 0022 0FD2     		bcs	.L7
 104:Core/Src/u8g2/Src/u8g2_hvline.c ****     return 0;
 105:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( b <= c )
  71              		.loc 1 105 3 is_stmt 1 view .LVU18
  72              		.loc 1 105 6 is_stmt 0 view .LVU19
  73 0024 9445     		cmp	ip, r2
  74 0026 0FD9     		bls	.L8
 106:Core/Src/u8g2/Src/u8g2_hvline.c ****     return 0;
 107:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( a < c )		
  75              		.loc 1 107 3 is_stmt 1 view .LVU20
  76              		.loc 1 107 6 is_stmt 0 view .LVU21
  77 0028 9645     		cmp	lr, r2
  78 002a 00D3     		bcc	.L4
  79 002c 7246     		mov	r2, lr
  80              	.LVL5:
  81              	.L4:
 108:Core/Src/u8g2/Src/u8g2_hvline.c ****     a = c;
 109:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( b > d )
  82              		.loc 1 109 3 is_stmt 1 view .LVU22
  83              		.loc 1 109 6 is_stmt 0 view .LVU23
  84 002e 9C45     		cmp	ip, r3
  85 0030 00D8     		bhi	.L5
  86 0032 6346     		mov	r3, ip
  87              	.LVL6:
  88              	.L5:
 110:Core/Src/u8g2/Src/u8g2_hvline.c ****     b = d;
 111:Core/Src/u8g2/Src/u8g2_hvline.c ****   
 112:Core/Src/u8g2/Src/u8g2_hvline.c ****   *ap = a;
  89              		.loc 1 112 3 is_stmt 1 view .LVU24
  90              		.loc 1 112 7 is_stmt 0 view .LVU25
  91 0034 0280     		strh	r2, [r0]	@ movhi
 113:Core/Src/u8g2/Src/u8g2_hvline.c ****   b -= a;
  92              		.loc 1 113 3 is_stmt 1 view .LVU26
  93              		.loc 1 113 5 is_stmt 0 view .LVU27
  94 0036 9B1A     		subs	r3, r3, r2
  95              	.LVL7:
 114:Core/Src/u8g2/Src/u8g2_hvline.c ****   *len = b;
  96              		.loc 1 114 3 is_stmt 1 view .LVU28
  97              		.loc 1 114 8 is_stmt 0 view .LVU29
  98 0038 0B80     		strh	r3, [r1]	@ movhi
 115:Core/Src/u8g2/Src/u8g2_hvline.c ****   return 1;
  99              		.loc 1 115 3 is_stmt 1 view .LVU30
 100              		.loc 1 115 10 is_stmt 0 view .LVU31
 101 003a 0120     		movs	r0, #1
 102              	.LVL8:
 103              	.L3:
 116:Core/Src/u8g2/Src/u8g2_hvline.c **** }
 104              		.loc 1 116 1 view .LVU32
 105 003c 5DF804FB 		ldr	pc, [sp], #4
 106              	.LVL9:
 107              	.L6:
  97:Core/Src/u8g2/Src/u8g2_hvline.c ****     }
 108              		.loc 1 97 9 view .LVU33
 109 0040 9646     		mov	lr, r2
 110              	.LVL10:
  97:Core/Src/u8g2/Src/u8g2_hvline.c ****     }
 111              		.loc 1 97 9 view .LVU34
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 5


 112 0042 EDE7     		b	.L2
 113              	.LVL11:
 114              	.L7:
 104:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( b <= c )
 115              		.loc 1 104 12 view .LVU35
 116 0044 0020     		movs	r0, #0
 117              	.LVL12:
 104:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( b <= c )
 118              		.loc 1 104 12 view .LVU36
 119 0046 F9E7     		b	.L3
 120              	.LVL13:
 121              	.L8:
 106:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( a < c )		
 122              		.loc 1 106 12 view .LVU37
 123 0048 0020     		movs	r0, #0
 124              	.LVL14:
 106:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( a < c )		
 125              		.loc 1 106 12 view .LVU38
 126 004a F7E7     		b	.L3
 127              		.cfi_endproc
 128              	.LFE0:
 130              		.section	.text.u8g2_draw_hv_line_2dir,"ax",%progbits
 131              		.align	1
 132              		.global	u8g2_draw_hv_line_2dir
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 137              	u8g2_draw_hv_line_2dir:
 138              	.LVL15:
 139              	.LFB1:
 117:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 118:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 119:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 120:Core/Src/u8g2/Src/u8g2_hvline.c **** /*==========================================================*/
 121:Core/Src/u8g2/Src/u8g2_hvline.c **** /* draw procedures */
 122:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 123:Core/Src/u8g2/Src/u8g2_hvline.c **** /*
 124:Core/Src/u8g2/Src/u8g2_hvline.c ****   x,y		Upper left position of the line within the pixel buffer 
 125:Core/Src/u8g2/Src/u8g2_hvline.c ****   len		length of the line in pixel, len must not be 0
 126:Core/Src/u8g2/Src/u8g2_hvline.c ****   dir		0: horizontal line (left to right)
 127:Core/Src/u8g2/Src/u8g2_hvline.c **** 		1: vertical line (top to bottom)
 128:Core/Src/u8g2/Src/u8g2_hvline.c ****   This function first adjusts the y position to the local buffer. Then it
 129:Core/Src/u8g2/Src/u8g2_hvline.c ****   will clip the line and call u8g2_draw_low_level_hv_line()
 130:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 131:Core/Src/u8g2/Src/u8g2_hvline.c **** */
 132:Core/Src/u8g2/Src/u8g2_hvline.c **** void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t di
 133:Core/Src/u8g2/Src/u8g2_hvline.c **** {
 140              		.loc 1 133 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 4, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 133 1 is_stmt 0 view .LVU40
 145 0000 30B5     		push	{r4, r5, lr}
 146              	.LCFI1:
 147              		.cfi_def_cfa_offset 12
 148              		.cfi_offset 4, -12
 149              		.cfi_offset 5, -8
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 6


 150              		.cfi_offset 14, -4
 151 0002 83B0     		sub	sp, sp, #12
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 24
 134:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 135:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* clipping happens before the display rotation */
 136:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 137:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* transform to pixel buffer coordinates */
 138:Core/Src/u8g2/Src/u8g2_hvline.c ****   y -= u8g2->pixel_curr_row;
 154              		.loc 1 138 3 is_stmt 1 view .LVU41
 155              		.loc 1 138 12 is_stmt 0 view .LVU42
 156 0004 C48F     		ldrh	r4, [r0, #62]
 157              		.loc 1 138 5 view .LVU43
 158 0006 121B     		subs	r2, r2, r4
 159              	.LVL16:
 139:Core/Src/u8g2/Src/u8g2_hvline.c ****   
 140:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2->ll_hvline(u8g2, x, y, len, dir);
 160              		.loc 1 140 3 is_stmt 1 view .LVU44
 161              		.loc 1 140 7 is_stmt 0 view .LVU45
 162 0008 C46A     		ldr	r4, [r0, #44]
 163              		.loc 1 140 3 view .LVU46
 164 000a 9DF81850 		ldrb	r5, [sp, #24]	@ zero_extendqisi2
 165 000e 0095     		str	r5, [sp]
 166 0010 92B2     		uxth	r2, r2
 167              		.loc 1 140 3 view .LVU47
 168 0012 A047     		blx	r4
 169              	.LVL17:
 141:Core/Src/u8g2/Src/u8g2_hvline.c **** }
 170              		.loc 1 141 1 view .LVU48
 171 0014 03B0     		add	sp, sp, #12
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 12
 174              		@ sp needed
 175 0016 30BD     		pop	{r4, r5, pc}
 176              		.loc 1 141 1 view .LVU49
 177              		.cfi_endproc
 178              	.LFE1:
 180              		.section	.text.u8g2_DrawHVLine,"ax",%progbits
 181              		.align	1
 182              		.global	u8g2_DrawHVLine
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	u8g2_DrawHVLine:
 188              	.LVL18:
 189              	.LFB2:
 142:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 143:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 144:Core/Src/u8g2/Src/u8g2_hvline.c **** /*
 145:Core/Src/u8g2/Src/u8g2_hvline.c ****   This is the toplevel function for the hv line draw procedures.
 146:Core/Src/u8g2/Src/u8g2_hvline.c ****   This function should be called by the user.
 147:Core/Src/u8g2/Src/u8g2_hvline.c ****   
 148:Core/Src/u8g2/Src/u8g2_hvline.c ****   "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
 149:Core/Src/u8g2/Src/u8g2_hvline.c **** */
 150:Core/Src/u8g2/Src/u8g2_hvline.c **** void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
 151:Core/Src/u8g2/Src/u8g2_hvline.c **** {
 190              		.loc 1 151 1 is_stmt 1 view -0
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 7


 191              		.cfi_startproc
 192              		@ args = 4, pretend = 0, frame = 8
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		.loc 1 151 1 is_stmt 0 view .LVU51
 195 0000 70B5     		push	{r4, r5, r6, lr}
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 16
 198              		.cfi_offset 4, -16
 199              		.cfi_offset 5, -12
 200              		.cfi_offset 6, -8
 201              		.cfi_offset 14, -4
 202 0002 84B0     		sub	sp, sp, #16
 203              	.LCFI5:
 204              		.cfi_def_cfa_offset 32
 205 0004 0446     		mov	r4, r0
 206 0006 9DF82000 		ldrb	r0, [sp, #32]	@ zero_extendqisi2
 207              	.LVL19:
 208              		.loc 1 151 1 view .LVU52
 209 000a ADF80E10 		strh	r1, [sp, #14]	@ movhi
 210 000e ADF80C20 		strh	r2, [sp, #12]	@ movhi
 211 0012 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 152:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
 153:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* The callback may rotate the hv line */
 154:Core/Src/u8g2/Src/u8g2_hvline.c ****   /* after rotation this will call u8g2_draw_hv_line_4dir() */
 155:Core/Src/u8g2/Src/u8g2_hvline.c ****   
 156:Core/Src/u8g2/Src/u8g2_hvline.c **** #ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
 157:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( u8g2->is_page_clip_window_intersection != 0 )
 212              		.loc 1 157 3 is_stmt 1 view .LVU53
 213              		.loc 1 157 12 is_stmt 0 view .LVU54
 214 0016 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 215              	.LVL20:
 216              		.loc 1 157 6 view .LVU55
 217 001a 5BB3     		cbz	r3, .L12
 158:Core/Src/u8g2/Src/u8g2_hvline.c **** #endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
 159:Core/Src/u8g2/Src/u8g2_hvline.c ****     if ( len != 0 )
 218              		.loc 1 159 5 is_stmt 1 view .LVU56
 219              		.loc 1 159 14 is_stmt 0 view .LVU57
 220 001c BDF80A30 		ldrh	r3, [sp, #10]
 221              		.loc 1 159 8 view .LVU58
 222 0020 43B3     		cbz	r3, .L12
 160:Core/Src/u8g2/Src/u8g2_hvline.c ****     {
 161:Core/Src/u8g2/Src/u8g2_hvline.c ****     
 162:Core/Src/u8g2/Src/u8g2_hvline.c ****       /* convert to two directions */    
 163:Core/Src/u8g2/Src/u8g2_hvline.c ****       if ( len > 1 )
 223              		.loc 1 163 7 is_stmt 1 view .LVU59
 224              		.loc 1 163 10 is_stmt 0 view .LVU60
 225 0022 012B     		cmp	r3, #1
 226 0024 03D9     		bls	.L14
 164:Core/Src/u8g2/Src/u8g2_hvline.c ****       {
 165:Core/Src/u8g2/Src/u8g2_hvline.c **** 	if ( dir == 2 )
 227              		.loc 1 165 2 is_stmt 1 view .LVU61
 228              		.loc 1 165 5 is_stmt 0 view .LVU62
 229 0026 0228     		cmp	r0, #2
 230 0028 26D0     		beq	.L19
 166:Core/Src/u8g2/Src/u8g2_hvline.c **** 	{
 167:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  x -= len;
 168:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  x++;
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 8


 169:Core/Src/u8g2/Src/u8g2_hvline.c **** 	}
 170:Core/Src/u8g2/Src/u8g2_hvline.c **** 	else if ( dir == 3 )
 231              		.loc 1 170 7 is_stmt 1 view .LVU63
 232              		.loc 1 170 10 is_stmt 0 view .LVU64
 233 002a 0328     		cmp	r0, #3
 234 002c 2DD0     		beq	.L20
 235              	.LVL21:
 236              	.L14:
 171:Core/Src/u8g2/Src/u8g2_hvline.c **** 	{
 172:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  y -= len;
 173:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  y++;
 174:Core/Src/u8g2/Src/u8g2_hvline.c **** 	}
 175:Core/Src/u8g2/Src/u8g2_hvline.c ****       }
 176:Core/Src/u8g2/Src/u8g2_hvline.c ****       dir &= 1;  
 237              		.loc 1 176 7 is_stmt 1 view .LVU65
 177:Core/Src/u8g2/Src/u8g2_hvline.c ****       
 178:Core/Src/u8g2/Src/u8g2_hvline.c ****       /* clip against the user window */
 179:Core/Src/u8g2/Src/u8g2_hvline.c ****       if ( dir == 0 )
 238              		.loc 1 179 7 view .LVU66
 239              		.loc 1 179 10 is_stmt 0 view .LVU67
 240 002e 10F00105 		ands	r5, r0, #1
 241 0032 34D1     		bne	.L16
 180:Core/Src/u8g2/Src/u8g2_hvline.c ****       {
 181:Core/Src/u8g2/Src/u8g2_hvline.c **** 	if ( y < u8g2->user_y0 )
 242              		.loc 1 181 2 is_stmt 1 view .LVU68
 243              		.loc 1 181 15 is_stmt 0 view .LVU69
 244 0034 B4F84C20 		ldrh	r2, [r4, #76]
 245              		.loc 1 181 9 view .LVU70
 246 0038 BDF80C30 		ldrh	r3, [sp, #12]
 247              		.loc 1 181 5 view .LVU71
 248 003c 9A42     		cmp	r2, r3
 249 003e 19D8     		bhi	.L12
 182:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 183:Core/Src/u8g2/Src/u8g2_hvline.c **** 	if ( y >= u8g2->user_y1 )
 250              		.loc 1 183 2 is_stmt 1 view .LVU72
 251              		.loc 1 183 16 is_stmt 0 view .LVU73
 252 0040 B4F84E20 		ldrh	r2, [r4, #78]
 253              		.loc 1 183 5 view .LVU74
 254 0044 9342     		cmp	r3, r2
 255 0046 15D2     		bcs	.L12
 184:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 185:Core/Src/u8g2/Src/u8g2_hvline.c **** 	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
 256              		.loc 1 185 2 is_stmt 1 view .LVU75
 257              		.loc 1 185 7 is_stmt 0 view .LVU76
 258 0048 B4F84A30 		ldrh	r3, [r4, #74]
 259 004c B4F84820 		ldrh	r2, [r4, #72]
 260 0050 0DF10A01 		add	r1, sp, #10
 261              	.LVL22:
 262              		.loc 1 185 7 view .LVU77
 263 0054 0DF10E00 		add	r0, sp, #14
 264              	.LVL23:
 265              		.loc 1 185 7 view .LVU78
 266 0058 FFF7FEFF 		bl	u8g2_clip_intersection2
 267              	.LVL24:
 268              		.loc 1 185 5 view .LVU79
 269 005c 50B1     		cbz	r0, .L12
 270              	.L17:
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 9


 186:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 187:Core/Src/u8g2/Src/u8g2_hvline.c ****       }
 188:Core/Src/u8g2/Src/u8g2_hvline.c ****       else
 189:Core/Src/u8g2/Src/u8g2_hvline.c ****       {
 190:Core/Src/u8g2/Src/u8g2_hvline.c **** 	if ( x < u8g2->user_x0 )
 191:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 192:Core/Src/u8g2/Src/u8g2_hvline.c **** 	if ( x >= u8g2->user_x1 )
 193:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 194:Core/Src/u8g2/Src/u8g2_hvline.c **** 	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
 195:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 196:Core/Src/u8g2/Src/u8g2_hvline.c ****       }
 197:Core/Src/u8g2/Src/u8g2_hvline.c ****       
 198:Core/Src/u8g2/Src/u8g2_hvline.c ****       
 199:Core/Src/u8g2/Src/u8g2_hvline.c ****       u8g2->cb->draw_l90(u8g2, x, y, len, dir);
 271              		.loc 1 199 7 is_stmt 1 view .LVU80
 272              		.loc 1 199 11 is_stmt 0 view .LVU81
 273 005e 236B     		ldr	r3, [r4, #48]
 274              		.loc 1 199 15 view .LVU82
 275 0060 9E68     		ldr	r6, [r3, #8]
 276              		.loc 1 199 7 view .LVU83
 277 0062 0095     		str	r5, [sp]
 278 0064 BDF80A30 		ldrh	r3, [sp, #10]
 279 0068 BDF80C20 		ldrh	r2, [sp, #12]
 280 006c BDF80E10 		ldrh	r1, [sp, #14]
 281 0070 2046     		mov	r0, r4
 282 0072 B047     		blx	r6
 283              	.LVL25:
 284              	.L12:
 200:Core/Src/u8g2/Src/u8g2_hvline.c ****     }
 201:Core/Src/u8g2/Src/u8g2_hvline.c **** }
 285              		.loc 1 201 1 view .LVU84
 286 0074 04B0     		add	sp, sp, #16
 287              	.LCFI6:
 288              		.cfi_remember_state
 289              		.cfi_def_cfa_offset 16
 290              		@ sp needed
 291 0076 70BD     		pop	{r4, r5, r6, pc}
 292              	.LVL26:
 293              	.L19:
 294              	.LCFI7:
 295              		.cfi_restore_state
 167:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  x++;
 296              		.loc 1 167 4 is_stmt 1 view .LVU85
 167:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  x++;
 297              		.loc 1 167 6 is_stmt 0 view .LVU86
 298 0078 8AB2     		uxth	r2, r1
 299              	.LVL27:
 167:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  x++;
 300              		.loc 1 167 6 view .LVU87
 301 007a D31A     		subs	r3, r2, r3
 302 007c 9BB2     		uxth	r3, r3
 303 007e ADF80E30 		strh	r3, [sp, #14]	@ movhi
 168:Core/Src/u8g2/Src/u8g2_hvline.c **** 	}
 304              		.loc 1 168 4 is_stmt 1 view .LVU88
 168:Core/Src/u8g2/Src/u8g2_hvline.c **** 	}
 305              		.loc 1 168 5 is_stmt 0 view .LVU89
 306 0082 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 10


 307 0084 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 308 0088 D1E7     		b	.L14
 309              	.LVL28:
 310              	.L20:
 172:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  y++;
 311              		.loc 1 172 4 is_stmt 1 view .LVU90
 172:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  y++;
 312              		.loc 1 172 6 is_stmt 0 view .LVU91
 313 008a BDF80C20 		ldrh	r2, [sp, #12]
 314              	.LVL29:
 172:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  y++;
 315              		.loc 1 172 6 view .LVU92
 316 008e D31A     		subs	r3, r2, r3
 317 0090 9BB2     		uxth	r3, r3
 318 0092 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 319              	.LVL30:
 173:Core/Src/u8g2/Src/u8g2_hvline.c **** 	}
 320              		.loc 1 173 4 is_stmt 1 view .LVU93
 173:Core/Src/u8g2/Src/u8g2_hvline.c **** 	}
 321              		.loc 1 173 5 is_stmt 0 view .LVU94
 322 0096 0133     		adds	r3, r3, #1
 323 0098 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 324 009c C7E7     		b	.L14
 325              	.LVL31:
 326              	.L16:
 190:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 327              		.loc 1 190 2 is_stmt 1 view .LVU95
 190:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 328              		.loc 1 190 15 is_stmt 0 view .LVU96
 329 009e B4F84820 		ldrh	r2, [r4, #72]
 190:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 330              		.loc 1 190 9 view .LVU97
 331 00a2 BDF80E30 		ldrh	r3, [sp, #14]
 190:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 332              		.loc 1 190 5 view .LVU98
 333 00a6 9A42     		cmp	r2, r3
 334 00a8 E4D8     		bhi	.L12
 192:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 335              		.loc 1 192 2 is_stmt 1 view .LVU99
 192:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 336              		.loc 1 192 16 is_stmt 0 view .LVU100
 337 00aa B4F84A20 		ldrh	r2, [r4, #74]
 192:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 338              		.loc 1 192 5 view .LVU101
 339 00ae 9342     		cmp	r3, r2
 340 00b0 E0D2     		bcs	.L12
 194:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 341              		.loc 1 194 2 is_stmt 1 view .LVU102
 194:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 342              		.loc 1 194 7 is_stmt 0 view .LVU103
 343 00b2 B4F84E30 		ldrh	r3, [r4, #78]
 344 00b6 B4F84C20 		ldrh	r2, [r4, #76]
 345 00ba 0DF10A01 		add	r1, sp, #10
 346              	.LVL32:
 194:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 347              		.loc 1 194 7 view .LVU104
 348 00be 03A8     		add	r0, sp, #12
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 11


 349              	.LVL33:
 194:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 350              		.loc 1 194 7 view .LVU105
 351 00c0 FFF7FEFF 		bl	u8g2_clip_intersection2
 352              	.LVL34:
 194:Core/Src/u8g2/Src/u8g2_hvline.c **** 	  return;
 353              		.loc 1 194 5 view .LVU106
 354 00c4 0028     		cmp	r0, #0
 355 00c6 CAD1     		bne	.L17
 356 00c8 D4E7     		b	.L12
 357              		.cfi_endproc
 358              	.LFE2:
 360              		.section	.text.u8g2_DrawHLine,"ax",%progbits
 361              		.align	1
 362              		.global	u8g2_DrawHLine
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	u8g2_DrawHLine:
 368              	.LVL35:
 369              	.LFB3:
 202:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 203:Core/Src/u8g2/Src/u8g2_hvline.c **** void u8g2_DrawHLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)
 204:Core/Src/u8g2/Src/u8g2_hvline.c **** {
 370              		.loc 1 204 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		.loc 1 204 1 is_stmt 0 view .LVU108
 375 0000 10B5     		push	{r4, lr}
 376              	.LCFI8:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 4, -8
 379              		.cfi_offset 14, -4
 380 0002 82B0     		sub	sp, sp, #8
 381              	.LCFI9:
 382              		.cfi_def_cfa_offset 16
 205:Core/Src/u8g2/Src/u8g2_hvline.c **** // #ifdef U8G2_WITH_INTERSECTION
 206:Core/Src/u8g2/Src/u8g2_hvline.c **** //   if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
 207:Core/Src/u8g2/Src/u8g2_hvline.c **** //     return;
 208:Core/Src/u8g2/Src/u8g2_hvline.c **** // #endif /* U8G2_WITH_INTERSECTION */
 209:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2_DrawHVLine(u8g2, x, y, len, 0);
 383              		.loc 1 209 3 is_stmt 1 view .LVU109
 384 0004 0024     		movs	r4, #0
 385 0006 0094     		str	r4, [sp]
 386 0008 FFF7FEFF 		bl	u8g2_DrawHVLine
 387              	.LVL36:
 210:Core/Src/u8g2/Src/u8g2_hvline.c **** }
 388              		.loc 1 210 1 is_stmt 0 view .LVU110
 389 000c 02B0     		add	sp, sp, #8
 390              	.LCFI10:
 391              		.cfi_def_cfa_offset 8
 392              		@ sp needed
 393 000e 10BD     		pop	{r4, pc}
 394              		.cfi_endproc
 395              	.LFE3:
 397              		.section	.text.u8g2_DrawVLine,"ax",%progbits
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 12


 398              		.align	1
 399              		.global	u8g2_DrawVLine
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	u8g2_DrawVLine:
 405              	.LVL37:
 406              	.LFB4:
 211:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 212:Core/Src/u8g2/Src/u8g2_hvline.c **** void u8g2_DrawVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)
 213:Core/Src/u8g2/Src/u8g2_hvline.c **** {
 407              		.loc 1 213 1 is_stmt 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		.loc 1 213 1 is_stmt 0 view .LVU112
 412 0000 10B5     		push	{r4, lr}
 413              	.LCFI11:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 4, -8
 416              		.cfi_offset 14, -4
 417 0002 82B0     		sub	sp, sp, #8
 418              	.LCFI12:
 419              		.cfi_def_cfa_offset 16
 214:Core/Src/u8g2/Src/u8g2_hvline.c **** // #ifdef U8G2_WITH_INTERSECTION
 215:Core/Src/u8g2/Src/u8g2_hvline.c **** //   if ( u8g2_IsIntersection(u8g2, x, y, x+1, y+len) == 0 ) 
 216:Core/Src/u8g2/Src/u8g2_hvline.c **** //     return;
 217:Core/Src/u8g2/Src/u8g2_hvline.c **** // #endif /* U8G2_WITH_INTERSECTION */
 218:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2_DrawHVLine(u8g2, x, y, len, 1);
 420              		.loc 1 218 3 is_stmt 1 view .LVU113
 421 0004 0124     		movs	r4, #1
 422 0006 0094     		str	r4, [sp]
 423 0008 FFF7FEFF 		bl	u8g2_DrawHVLine
 424              	.LVL38:
 219:Core/Src/u8g2/Src/u8g2_hvline.c **** }
 425              		.loc 1 219 1 is_stmt 0 view .LVU114
 426 000c 02B0     		add	sp, sp, #8
 427              	.LCFI13:
 428              		.cfi_def_cfa_offset 8
 429              		@ sp needed
 430 000e 10BD     		pop	{r4, pc}
 431              		.cfi_endproc
 432              	.LFE4:
 434              		.section	.text.u8g2_DrawPixel,"ax",%progbits
 435              		.align	1
 436              		.global	u8g2_DrawPixel
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	u8g2_DrawPixel:
 442              	.LVL39:
 443              	.LFB5:
 220:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 221:Core/Src/u8g2/Src/u8g2_hvline.c **** void u8g2_DrawPixel(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
 222:Core/Src/u8g2/Src/u8g2_hvline.c **** {
 444              		.loc 1 222 1 is_stmt 1 view -0
 445              		.cfi_startproc
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 13


 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 223:Core/Src/u8g2/Src/u8g2_hvline.c **** #ifdef U8G2_WITH_INTERSECTION
 224:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( y < u8g2->user_y0 )
 448              		.loc 1 224 3 view .LVU116
 449              		.loc 1 224 16 is_stmt 0 view .LVU117
 450 0000 B0F84C30 		ldrh	r3, [r0, #76]
 451              		.loc 1 224 6 view .LVU118
 452 0004 9342     		cmp	r3, r2
 453 0006 0BD8     		bhi	.L28
 225:Core/Src/u8g2/Src/u8g2_hvline.c ****     return;
 226:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( y >= u8g2->user_y1 )
 454              		.loc 1 226 3 is_stmt 1 view .LVU119
 455              		.loc 1 226 17 is_stmt 0 view .LVU120
 456 0008 B0F84E30 		ldrh	r3, [r0, #78]
 457              		.loc 1 226 6 view .LVU121
 458 000c 9342     		cmp	r3, r2
 459 000e 07D9     		bls	.L28
 227:Core/Src/u8g2/Src/u8g2_hvline.c ****     return;
 228:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( x < u8g2->user_x0 )
 460              		.loc 1 228 3 is_stmt 1 view .LVU122
 461              		.loc 1 228 16 is_stmt 0 view .LVU123
 462 0010 B0F84830 		ldrh	r3, [r0, #72]
 463              		.loc 1 228 6 view .LVU124
 464 0014 8B42     		cmp	r3, r1
 465 0016 03D8     		bhi	.L28
 229:Core/Src/u8g2/Src/u8g2_hvline.c ****     return;
 230:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( x >= u8g2->user_x1 )
 466              		.loc 1 230 3 is_stmt 1 view .LVU125
 467              		.loc 1 230 17 is_stmt 0 view .LVU126
 468 0018 B0F84A30 		ldrh	r3, [r0, #74]
 469              		.loc 1 230 6 view .LVU127
 470 001c 8B42     		cmp	r3, r1
 471 001e 00D8     		bhi	.L31
 472              	.L28:
 473 0020 7047     		bx	lr
 474              	.L31:
 222:Core/Src/u8g2/Src/u8g2_hvline.c **** #ifdef U8G2_WITH_INTERSECTION
 475              		.loc 1 222 1 view .LVU128
 476 0022 00B5     		push	{lr}
 477              	.LCFI14:
 478              		.cfi_def_cfa_offset 4
 479              		.cfi_offset 14, -4
 480 0024 83B0     		sub	sp, sp, #12
 481              	.LCFI15:
 482              		.cfi_def_cfa_offset 16
 231:Core/Src/u8g2/Src/u8g2_hvline.c ****     return;
 232:Core/Src/u8g2/Src/u8g2_hvline.c **** #endif /* U8G2_WITH_INTERSECTION */
 233:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2_DrawHVLine(u8g2, x, y, 1, 0);
 483              		.loc 1 233 3 is_stmt 1 view .LVU129
 484 0026 0023     		movs	r3, #0
 485 0028 0093     		str	r3, [sp]
 486 002a 0123     		movs	r3, #1
 487 002c FFF7FEFF 		bl	u8g2_DrawHVLine
 488              	.LVL40:
 234:Core/Src/u8g2/Src/u8g2_hvline.c **** }
 489              		.loc 1 234 1 is_stmt 0 view .LVU130
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 14


 490 0030 03B0     		add	sp, sp, #12
 491              	.LCFI16:
 492              		.cfi_def_cfa_offset 4
 493              		@ sp needed
 494 0032 5DF804FB 		ldr	pc, [sp], #4
 495              		.cfi_endproc
 496              	.LFE5:
 498              		.section	.text.u8g2_SetDrawColor,"ax",%progbits
 499              		.align	1
 500              		.global	u8g2_SetDrawColor
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 505              	u8g2_SetDrawColor:
 506              	.LVL41:
 507              	.LFB6:
 235:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 236:Core/Src/u8g2/Src/u8g2_hvline.c **** /*
 237:Core/Src/u8g2/Src/u8g2_hvline.c ****   Assign the draw color for all drawing functions.
 238:Core/Src/u8g2/Src/u8g2_hvline.c ****   color may be 0 or 1. The actual color is defined by the display.
 239:Core/Src/u8g2/Src/u8g2_hvline.c ****   With color = 1 the drawing function will set the display memory to 1.
 240:Core/Src/u8g2/Src/u8g2_hvline.c ****   For OLEDs this ususally means, that the pixel is enabled and the LED 
 241:Core/Src/u8g2/Src/u8g2_hvline.c ****   at the pixel is turned on.
 242:Core/Src/u8g2/Src/u8g2_hvline.c ****   On an LCD it usually means that the LCD segment of the pixel is enabled, 
 243:Core/Src/u8g2/Src/u8g2_hvline.c ****   which absorbs the light.
 244:Core/Src/u8g2/Src/u8g2_hvline.c ****   For eInk/ePaper it means black ink.
 245:Core/Src/u8g2/Src/u8g2_hvline.c **** 
 246:Core/Src/u8g2/Src/u8g2_hvline.c ****   7 Jan 2017: Allow color value 2 for XOR operation.
 247:Core/Src/u8g2/Src/u8g2_hvline.c ****   
 248:Core/Src/u8g2/Src/u8g2_hvline.c **** */
 249:Core/Src/u8g2/Src/u8g2_hvline.c **** void u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)
 250:Core/Src/u8g2/Src/u8g2_hvline.c **** {
 508              		.loc 1 250 1 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 251:Core/Src/u8g2/Src/u8g2_hvline.c ****   u8g2->draw_color = color;	/* u8g2_SetDrawColor: just assign the argument */ 
 513              		.loc 1 251 3 view .LVU132
 514              		.loc 1 251 20 is_stmt 0 view .LVU133
 515 0000 80F89210 		strb	r1, [r0, #146]
 252:Core/Src/u8g2/Src/u8g2_hvline.c ****   if ( color >= 3 )
 516              		.loc 1 252 3 is_stmt 1 view .LVU134
 517              		.loc 1 252 6 is_stmt 0 view .LVU135
 518 0004 0229     		cmp	r1, #2
 519 0006 02D9     		bls	.L32
 253:Core/Src/u8g2/Src/u8g2_hvline.c ****     u8g2->draw_color = 1;	/* u8g2_SetDrawColor: make color as one if arg is invalid */
 520              		.loc 1 253 5 is_stmt 1 view .LVU136
 521              		.loc 1 253 22 is_stmt 0 view .LVU137
 522 0008 0123     		movs	r3, #1
 523 000a 80F89230 		strb	r3, [r0, #146]
 524              	.L32:
 254:Core/Src/u8g2/Src/u8g2_hvline.c **** }
 525              		.loc 1 254 1 view .LVU138
 526 000e 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE6:
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 15


 530              		.text
 531              	.Letext0:
 532              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 533              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 534              		.file 4 "Core/Src/u8g2/Inc/u8x8.h"
 535              		.file 5 "Core/Src/u8g2/Inc/u8g2.h"
ARM GAS  C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_hvline.c
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:20     .text.u8g2_clip_intersection2:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:25     .text.u8g2_clip_intersection2:00000000 u8g2_clip_intersection2
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:131    .text.u8g2_draw_hv_line_2dir:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:137    .text.u8g2_draw_hv_line_2dir:00000000 u8g2_draw_hv_line_2dir
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:181    .text.u8g2_DrawHVLine:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:187    .text.u8g2_DrawHVLine:00000000 u8g2_DrawHVLine
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:361    .text.u8g2_DrawHLine:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:367    .text.u8g2_DrawHLine:00000000 u8g2_DrawHLine
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:398    .text.u8g2_DrawVLine:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:404    .text.u8g2_DrawVLine:00000000 u8g2_DrawVLine
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:435    .text.u8g2_DrawPixel:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:441    .text.u8g2_DrawPixel:00000000 u8g2_DrawPixel
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:499    .text.u8g2_SetDrawColor:00000000 $t
C:\Users\MOROSH~1\AppData\Local\Temp\cccJX0BD.s:505    .text.u8g2_SetDrawColor:00000000 u8g2_SetDrawColor

NO UNDEFINED SYMBOLS
